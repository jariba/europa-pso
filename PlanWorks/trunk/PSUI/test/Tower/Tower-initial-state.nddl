 #include "./Tower-model.nddl"

// Allocate objects of the problem
PlannerConfig world = new PlannerConfig(0, 100, 1000);


Var0 var0=new Var0();
Var1 var1=new Var1();
Var2 var2=new Var2();
Var3 var3=new Var3();
Var4 var4=new Var4();
Operator op=new Operator();
Goal goalTower=new Goal();
 
close();

//Initial State

goal(var2.Clear_b1 clearB1trueInitially);
eq(clearB1trueInitially.start, world.m_horizonStart);
//precedes(clearB1trueInitially.end, world.m_horizonEnd);

goal(var4.Clear_b2 clearB2trueInitially);
eq(clearB2trueInitially.start, world.m_horizonStart);
//precedes(clearB2trueInitially.end, world.m_horizonEnd);

goal(var1.OnTable_b1 onTableB1trueInitially);
eq(onTableB1trueInitially.start, world.m_horizonStart);
//precedes(onTableB1trueInitially.end, world.m_horizonEnd);

goal(var0.OnTable_b2 onTableB2trueInitially);
eq(onTableB2trueInitially.start, world.m_horizonStart);
//precedes(onTableB2trueInitially.end, world.m_horizonEnd);

goal(var3.ArmEmpty armEmptytrueInitially);
eq(armEmptytrueInitially.start, world.m_horizonStart);
//precedes(armEmptytrueInitially.end, world.m_horizonEnd);

goal(op.Nop noptrueInitially);
eq(noptrueInitially.start, world.m_horizonStart);
//precedes(noptrueInitially.end, world.m_horizonEnd);


//Goal State

goal(goalTower.GoalAchieved towerFinallyDone);
precedes(world.m_horizonStart, towerFinallyDone.start);
precedes(towerFinallyDone.end, world.m_horizonEnd);



