// CrewPlanning.bsh

import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Map;
import java.util.TreeMap;
import java.util.List;
import java.util.Vector;
import java.util.Comparator;
import java.util.Collections;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.JTable;
import javax.swing.table.TableModel;
import javax.swing.table.AbstractTableModel;

import org.ops.ui.util.Util;
import org.ops.ui.PSDesktop;
import dsa.*;
import org.ops.ui.mouse.*;
import org.ops.ui.gantt.*;
import org.ops.ui.chart.*;

int month = GregorianCalendar.SEPTEMBER, day = 11; 
GregorianCalendar start = new GregorianCalendar(2006,month,day,0,0);
GregorianCalendar end = new GregorianCalendar(2006,month,day,0,50);

void initDSA()
{
	cwd = bsh.cwd;
    dsa.loadModel(cwd+"/libNDDLHelloWorld_g.so");
    dsa.addPlan(cwd+"/NDDLHelloWorld-initial-state.xml",false);		
}

void initPSEngine()
{
	cwd = bsh.cwd;
    psengine.loadModel(cwd+"/libNDDLHelloWorld_g.so");
    psengine.executeTxns(cwd+"/NDDLHelloWorld-initial-state.xml");		
}

void setupDesktop()
    throws Exception
{
    ActionDetailsPanel dp = (ActionDetailsPanel)desktop.makeDetailsFrame().getContentPane().getComponent(0);

    JInternalFrame ganttFrame = desktop.makeResourceGanttFrame(start,end);
    ganttFrame.setLocation(0,0);
    ganttFrame.setSize(700,300);
    PSGantt gantt = (PSGantt)ganttFrame.getContentPane().getComponent(0);
    gantt.addMouseListener(dp);    
}

Object safeBound(int bound)
{
	int INF=1e6;
    if (bound < -INF)
    	return "-INF";
    if (bound > INF)
    	return "INF";
    
    return bound;
}

String getBounds(dsa.Action a)
{
    StringBuffer buf = new StringBuffer();
    
    buf.append("[").append(safeBound(a.getEarliestStart())).append(",").append(safeBound(a.getLatestStart())).append("]")
       .append(" ")
       .append("[").append(safeBound(a.getEarliestEnd())).append(",").append(safeBound(a.getLatestEnd())).append("]");
    
    return buf.toString();
}

horizonStart = 0;
horizonEnd = 100;
maxSteps = 200;
maxDepth = 100000;
config = "PlannerConfig.xml";

initPSEngine();
desktop.makeSolverDialog(config,horizonStart,horizonEnd);
//setupDesktop();

//Example of table using JoSQL query
//desktop.makeTableFrame("Components",dsa.getComponents(),"SELECT key,name FROM dsa.Component");

//To inspect parameters
/*
show();
dsa.getComponents().get(1).getName();
c  = dsa.getComponents().get(1);
c.getActions().get(1).getName();
a = c.getActions().get(1);
param = a.getParameters();
param.get(0).getName();
param.get(0).getValue();
*/
 

