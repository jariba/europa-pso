// 
// * See the file "PlanWorks/disclaimers-and-notices.txt" for 
// * information on usage and redistribution of this file, 
// * and for a DISCLAIMER OF ALL WARRANTIES. 
// 
// $Id: planViz.txt,v 1.6 2003-10-28 20:42:00 taylor Exp $
//
// PlanWorks
//
// Will Taylor -- started 10oct03
//

This set of use cases covers the functionality of the PlanWorks Plan
Visualization (PlanViz) graphical user interface.


PLANVIZ-1
--------------------
Create a project.

Pre-conditions:
  1. PlanWorks is not running.
  2. PlanWorks data base is "clean".

Method:
  1. Start PlanWorks:
  2. Create a project with menu-bar selection "Project->Create ...",
     adding a plan sequence.

Post-conditions:
  1. PlanWorks frame title is suffixed with "=> <project-name>".
  2. "Planning Sequence" menu appears in the menu-bar.
  3. Menu-bar item "Project->Delete ..." is enabled.

Requirements: 3.2.a, 3.6, 3.7, 3.8


PLANVIZ-2
--------------------
Exercise error handling for missing partial plan files.

Pre-conditions:
  1. PlanWorks is not running.
  2. Plan sequence step test data contains all files named step<nn> with 
     required extensions, except for step<nn>.slots.
  3. PlanWorks data base is "clean".

Method:
  1. Start PlanWorks:
  2. Create a project with menu-bar selection "Project->Create ...",
     adding the test sequence.

Post-conditions:
  1. Error dialog "Invalid Sequence Directory" appears.

Requirements:


PLANVIZ-3
--------------------
Exercise error handling for duplicate projects

Pre-conditions:
  1. PlanWorks is running.
  2. Test project has been created.

Method:
  1. Create a project with the same name as the test project, using
     menu-bar selection "Project->Create ...".

Post-conditions:
  1. Error dialog "Duplicate Name Exception" appears.

Requirements: 3.9


PLANVIZ-4
--------------------
Delete a project.

Pre-conditions:
  1. PlanWorks is running.
  2. Test project has been created, and is the only project.

Method:
  1. Delete test project with menu-bar selection "Project->Delete ...".

Post-conditions:
  1. PlanWorks frame title suffix "=> <project-name>" is removed.
  2. Menu-bar item "Project->Delete ..." is disabled.

Requirements: 3.2.c


PLANVIZ-5
--------------------
Open a project.

Pre-conditions:
  1. PlanWorks is running.
  2. Test project has been created.

Method:
  1. Create a second test project, with a unique name, with menu-bar 
     selection "Project->Create ...".
  2. Open first test project with menu-bar selection "Project->Open ...".

Post-conditions:
  1. PlanWorks frame title is suffixed with "=> <test-project-2>".
  2. Menu-bar item "Project->Open ..." is enabled.

Requirements: 3.2.c


PLANVIZ-6
--------------------
Add sequences to a project.

Pre-conditions:
  1. PlanWorks is running.
  2. Project "test1" is the only project in the data base.  It has
     plan sequence "test-seq-1".

Method:
  1. Add sequence "test-seq-2" to "test1" project with menu-bar selection
     "Project->Add Sequence ...".
  2. Add sequence "test-seq-3" to "test1" project with menu-bar selection
     "Project->Add Sequence ...".

Post-conditions:
  1. PlanWorks frame title remains suffixed with "=> "test1"".
  2. Menu-bar selection "Planning Sequence" offers user three sequences for
     viewing: "test-seq-1", "test-seq-2", and "test-seq-3".

Requirements: 3.10


PLANVIZ-7
--------------------
Display the Timeline Views of multiple sequence partial plans.

Pre-conditions:
  1. PlanWorks is running.
  2. "test-seq-2", and "test-seq-3" have been added to the "test1" project
     as sequences, in addtion to "test-seq-1"

Method:
  1. Display "test1" Sequence Steps View using menu-bar selection
     "Planning Sequence->monkey.....".
  2. Display "test-seq-1" Timeline View by clicking Mouse-Right on the "step0"
     element of the "SequenceStepsView of test-seq-1", and selecting 
     "Timeline View".
  3. Display "test-seq-2" Sequence Steps View using menu-bar selection
     "Planning Sequence->test-seq-2".
  4. Display "test-seq-2" Timeline View by clicking Mouse-Right on the "step0"
     element of the "SequenceStepsView of test-seq-2", and selecting
     "Timeline View"".
  5. Display "test-seq-3" Sequence Steps View using menu-bar selection
     "Planning Sequence->test-seq-3".
  6. Display "test-seq-3" Timeline View by clicking Mouse-Right on the "step0"
     element of the "SequenceStepsView of test-seq-3", and selecting
     "Timeline View"".
  7. Display "test-seq-1" Timeline View by clicking Mouse-Right on the "step0"
     element of the "SequenceStepsView of test-seq-1", and selecting 
     "Timeline View"".

Post-conditions:
  1. Three Content Spec windows exist, three TimelineView windows exist, and
     the TimelineView of "test-seq-1" was brought to the front by method step 7.

Requirements: 4.0.2, 4.0.3, 4.2.1, 4.2.2


PLANVIZ-8
--------------------
Perform "tiling" and cascading layouts of multiple view and content spec windows.

Pre-conditions:
  1. PlanWorks is running.
  2. "test-seq-2", and "test-seq-3" have been added to the "test1" project
     as sequences, in addtion to "test-seq-1"
  3. Each sequence has its Content Spec, SequenceQuery, Timeline View and
     Sequence Steps View windows displayed.

Method:
  1. Layout the windows using menu-bar selection "Window->Tile Windows".
  2. Layout the windows using menu-bar selection "Window->Cascade".

Post-conditions:
  1. All twelve windows are non-overlapping "tiles", after Method:1.  The
     ContentSpec and SequenceQuery windows are tiled across the top row of
     the frame.  The TimelineView and SequenceStepsView windows are tiled
     in the second thru fourth rows.
  2. After Method:2, the six Content Spec and SequenceQuery windows are 
     tiled across the top of the frame, and six Sequence Steps Views and
     Timeline Views are an overlapping cascade from the upper left to the 
     lower right, under the Content Spec and Sequence Query windows.

Requirements: 4.2.3.f


PLANVIZ-9
--------------------
Delete sequences from a project.

Pre-conditions:
  1. PlanWorks is running.
  2. "test-seq-2", and "test-seq-3" have been added to the "test1" project
     as sequences, in addtion to "test-seq-1"
  3. Each sequence has its Content Spec, SequenceQuery, Timeline View and
     Sequence Steps View windows displayed.

Method:
  1. Delete "test-seq-2" sequence by using menu-bar selection of
     "Project->Delete Sequence ...".
  2. Delete "test-seq-3" sequence by using menu-bar selection of
     "Project->Delete Sequence ...".

Post-conditions:
  1. Four windows remain: the ContentSpec, the SequenceQuery, the TimelineView, 
     and the SequenceStepsView of "test-seq-1".

Requirements: 3.10


PLANVIZ-10
--------------------
Display all partial plan views for a sequence step.

Pre-conditions:
  1. PlanWorks is running.
  2. The "test1" project is open.
  3. No partial plan views are displayed.

Method:
  1. Display "test-seq-1" Sequence Steps View using menu-bar selection
     "Planning Sequence->test-seq-1".
  2. Display "test-seq-1" Constraint Network View by clicking Mouse-Right on the
     "step<nn>" element of the "SequenceStepsView of test-seq-1", and selecting
     "Constraint Network View".
  3. Display "test-seq-1" Temporal Extent View by clicking Mouse-Right on the
     "step<nn>" element of the "SequenceStepsView of test-seq-1", and selecting
     "Temporal Extent View".
  4. Display "test-seq-1" Timeline View by clicking Mouse-Right on the
     "step<nn>" element of the "SequenceStepsView of test-seq-1", and selecting
     "Timeline View".
  4. Display "test-seq-1" Token Network View by clicking Mouse-Right on the
     "step<nn>" element of the "SequenceStepsView of test-seq-1", and selecting
     "Token Network View".
  5. Display "test-seq-1" Transaction View by clicking Mouse-Right on the
     "step<nn>" element of the "SequenceStepsView of test-seq-1", and selecting
     "TransactionView".
  6. Open the first two token nodes of the Constraint Network View, and then
     open the "closed" variable and constraint nodes that result.  Then 
     close the "opened" variable, constraint, and token nodes to return to the
     initial state.

Post-conditions:
  1. All token nodes (rectangles) appear in the Constraint Network View, and 
     variable nodes (ovals) and constraint nodes (left/right pointed rectangles)
     are linked to the token nodes "opened" in Method:6.
     Mouse cursor over token nodes displays "predicateName( parameterValues)"
     on the first line, and "Mouse-L: open nearest variables".  Mouse cursor over 
     variable nodes displays "variableType" on the first line, and
     "Mouse-L: open nearest token links/constraints" on the second line.  
     Mouse cursor over constraint nodes displays "constraintType" on the first 
     line, and "Mouse-L: open nearest token variables" on the second line. 
  2. All token nodes appear in the Temporal Extent View.  Mouse cursor over 
     the token nodes displays "predicateName( parameterValues)".  Mouse cursor
     over start/end interval "triangles" displays their time scale value.
     Mouse cursor over a token's duration  line displays the duration
     interval.
  3. Timeline nodes and slot nodes appear in the Timeline View.  Mouse cursor
     over timeline slots displays the slot's "predicateName( parameterValues)".
  4. Token nodes, with "master roots" appear in the Token Network View.
     Mouse cursor over token nodes displays "predicateName( parameterValues)".
  5. Transaction entries appear in the Transaction View.  All transaction
     entries have values for OBJ_NAME.  Entries with TRANSACTION_TYPEs of
     VARIABLE_* and TOKEN_* have values for PREDICATE_NAME.  Entries with 
     TRANSACTION_TYPEs of VARIABLE_* and OBJ_NAME = PARAMETER_VAR have values 
     for PARAMETER_NAME.

Requirements: 4.2.1, 4.2.2, 4.2.3.d, 4.2.3.e, 4.2.3.f, 4.3.2.a


PLANVIZ-11
--------------------
Exercise popup menu facilities of partial plan views.

Pre-conditions:
  1. PlanWorks is running.
  2. The "test1" project is open, and all partial plan views are being
     displayed for step<nn>.

Method:
  1. Using either the Constraint Network, Temporal Extent, Timeline, or
     Token Network view, choose token keys for a slotted token and a
     free token.
  2. Mouse-Right click, in turn, on the Constraint Network , Temporal Extent, 
     Timeline, and Token Network views, selecting "Find Token By Key",
     entering the slotted token key value, and then selecting "Enter".
  3. Mouse-Right, in turn, the Constraint Network , Temporal Extent, 
     Timeline, and Token Network views, selecting "Find Token By Key",
     entering the free token key value, and then selecting "Enter".
  4. Arbitrarily, pick a slotted token node in one of the views, and Mouse-
     Right click on the node, selecting "Set Active Token".
  5. In each of the other views, except for the Transaction view, Mouse-
     Right click on the background, and select "Snap to Active Token".
  6. Arbitrarily, pick a free token node in one of the views, and Mouse-
     Right click on the node, selecting "Set Active Token".
  7. In each of the other views, except for the Transaction view, Mouse-
     Right click on the background, and select "Snap to Active Token".
  8. In the Temporal Extent view, Mouse-Right click on the background, and
     select "Set Time Scale Line".
  9. In the Transaction view, Mouse-Right click on the background of the 
     "header" portion of the view, and select "Find Transaction By Obj_Key".
     Enter an OBJ_KEY value.
 10. In the Transaction view, move the mouse over any of the column header
     nodes to see whether that column is sortable, in either ascending or
     descending order.  Mouse-left click to initiate the sort.  Sort all
     the columns.

Post-conditions:
  1. Method:2 - In turn, each of the views should re-oriented itself to
     display the selected slotted token node with a green highlight around it.
  2. Method:3 - In turn, each of the views should re-oriented itself to
     display the selected free token node with a green highlight around it.
  3. Method:4 - the selected slotted token node will have a green highlight 
     around it.
  4. Method:5 - Each of the other views should re-oriented itself to
     display the selected slotted token node with a green highlight around it.
  5. Method:6 -the selected free token node will have a green highlight 
     around it.
  6. Method:7 - Each of the other views should re-oriented itself to
     display the selected free token node with a green highlight around it.
  7. Method:8 - a red vertical line should appear at the location of the
     mouse click, and placing the mouse cursor over the red line will cause
     a "tool tip" to appear with the value of the "x" or time coordinate.
  8. Method:9 - The lower portion of the Transaction view will scroll up to 
     show the transaction entry with the selected OBJ_KEY value.
  9. Method:10 - The values in the columns which are sorted will be redisplayed
     in the proper order.

Requirements: TBD


PLANVIZ-12
--------------------
Use the Content Specification to filter which tokens are displayed on the 
partial plan views.

Pre-conditions:
  1. PlanWorks is running.
  2. The "test1" project is open, and all partial plan views, except
     Transaction View, are being displayed for step<nn> in a "tiled" layout 
     arrangement.
  3. The Constraint Network View has been expanded for at least two tokens,
     and all their variable and constraint nodes.

Method:
  1. Select a "Predicate" from the Content Spec.  Apply it.
  2. Check "NOT" for the selected predicate.  Apply it.
  3. Select "AND" from the combo box to the left of the "Predicate", 
     select another predicate, and check "NOT" for it, as well.  Apply it.
  4. Change the "AND" to an "OR" and uncheck the "NOT" boxes for the
     two predicates.  Apply it.
  5. Reset the spec.
  6. Select a "Timeline" from the Content Spec.  Apply it.
  7. Utilize "AND", "OR", and "NOT", as with "Predicate", for variations
     of Timeline selection.
  8. Reset the spec.
  9. Enter Time Interval "Start" and "End" values in the Content Spec.  Apply it.
 10. Utilize "AND", "OR", and "NOT", as with "Predicate", for variations
     of Time Interval selection.
 11. Reset the spec.
 12. Check "Merge tokens".  Apply it.
 13. Check "View slotted" or "View free tokens".  Apply it.
 14. Reset the spec.
 15. Check "NOT" for selected Timeline.  Check "require" and enter a 
     token key, select "Add" and "require another token key -- assuming
     that these keys are in the selected timeline.  Apply it.
 16. Select "Remove" for the second required key, and change "require"
     to "exclude" for the first key.  Uncheck the "NOT" for the
     selected timeline.  Apply it.
 17. Reset the spec.

Post-conditions:
  1. Method:1 - only tokens of the selected predicate are displayed in
     the views.
  2. Method:2 - all tokens, except those of the selected predicate, will
     be displayed in all views.
  3. Method:3 - all tokens, except those of the two selected predicates, 
     will be displayed in all views.
  4. Method:4 - only tokens of the two selected predicates, will be 
     displayed in all views.
  5. Method:5 - all tokens are displayed.
  6. Method:6 - only that timeline, and tokens in it are displayed.
  7. Method:7 - variations with Timeline, similar to Predicate.
  8. Method:8 - all tokens are displayed.
  9. Method:9 - only those tokens whose start/end variable extents occur
     within the interval will be displayed.
 10. Method:10 - variations with Time Interval, similar to Predicate and
     Timeline.
 11. Method:11 - all tokens are displayed.
 12. Method:12 - Tokens which are overloaded on timeline slots are not displayed.
 13. Method:13 - If "slotted", no free tokens will be displayed.  If "free
     tokens", only free tokens will be displayed.
 14. Method:14 - all tokens are displayed.
 15. Method:15 - the only tokens from the not selected timeline which are
     displayed are the required tokens
 16. Method:16 - Only tokens from the selected timeline are displayed, except
     for the "exclude" token.
 17. Method:17 - all tokens are displayed.

Note: In the Constraint Network View, variable and constraint nodes are
     associated with their nearest token, and are displayed or not,
     depending on that token.

Requirements: 4.1.1, 4.1.2.a, 4.1.2.b, 4.1.2.c, 4.1.3, 4.1.4, 4.1.5,
     4.1.7, 4.1.8, 4.1.9


PLANVIZ-13
--------------------
Use the Sequence Query dialog to display windows with sequence query information.

Pre-conditions:
  1. PlanWorks is running.
  2. A project is open, which has a multi-step sequence.

Method:
  1. Select the sequence from the "Planning Sequence" menu.
  2. Select a Transaction View from one of the sequence steps, using the
     Mouse-Right popup menu.  Pick constraint, token, and variable key
     values to use for appropriate queries.
  3. Using the "SequenceQuery" dialog, select "Steps" and then select in
     turn the qualified "Steps" queries: "Where Constraint/Token/Variable
     Transacted", which expand into a "Key" field and a type "combo box".
     Use the keys from Method:2 for the object types, and then permute the
     transaction types for each object type.  Click on "Apply Query".
  4. In each of the "QueryResults" windows created by Method:3, Mouse-Right 
     click on the background of the "header" portion of the view, and select 
     "Find Transaction By Obj_Key".  Enter an OBJ_KEY value.
  5. Using the "SequenceQuery" dialog, select "Steps" and then select in
     turn the qualified "Steps" queries: With Non-unit Decisions/Restrictions/
     Unit Decisions.  These queries do not expand.  Click on "Apply Query".
  6. Using the "SequenceQuery" dialog, select "Transactions" and then select in
     turn the qualified "Transactions" queries: "For Constraint/Token/Variable",
     which expand into a "Key" field; and "In Range", which expands into
     "startStep" and "endStep" fields.  Enter appropriate values for the
     fields, and click on "Apply Query".
  7. In each of the "QueryResults" windows created by Method:6, Mouse-Right 
     click on the background of the "header" portion of the view, and select 
     "Find Transaction By Obj_Key".  Enter an OBJ_KEY value.
  8. In each of the "QueryResults" windows, move the mouse over any of the 
     column header nodes to see whether that column is sortable, in either 
     ascending or descending order.  Mouse-left click to initiate the sort.  
     Sort all the columns.

Post-conditions:
  1. Method:1 - the Sequence Query and Sequence Steps View windows appear.
  2. Method:2 - "TransactionView" window appears.
  3. Method:3 - Use "TransactionView" windows for appropriate steps of the
     Sequence Steps View to verify the results in the "QueryResults"
     windows.
  4. Method:4 - The lower portion of the "QueryResults" window will scroll up 
     to show the transaction entry with the selected OBJ_KEY value.
  5. Method:5 - Verify these queries using knowledge from the plan sequence.
  6. Method:6 - Use "TransactionView" windows for appropriate steps of the
     Sequence Steps View to verify the results in the "QueryResults"
     windows.
  7. Method:7 - The lower portion of the "QueryResults" window will scroll up 
     to show the transaction entry with the selected OBJ_KEY value.
  8. Method:8 - The values in the columns which are sorted will be redisplayed
     in the proper order.

Requirements: 4.3.1.a-g, 4.3.2.b-e

