
PLASMA (PLan State MAnagement Architecture) is a component-based
software library for representation and reasoning with plans within a
constraint-based paradigm. Our goal in developing PLASMA is to provide a
fast, flexible, extensible, reusable technology platform for building
planning and scheduling applications suitable for space
exploration. PLASMA is derived from EUROPA which has been the core
planning technology for a variety of NASA-relevant research and mission
application. A notable example is MAPGEN, the ground-based daily
activity planning system for the Mars Exploration Rover mission. EUROPA
in turn is derived from HSTS [] which was the planner for the Remote
Agent[]. PLASMA builds on the legacies of EUROPA and HSTS in its support
for constraint-based temporal-planning techniques. However, it provides
a richer modeling language, and a highly modular and extendible
architecture which has resulted in improved performance and opened the
technology to a broader range of planning techniques (e.g. POCL
planning).

The philosophy underlying PLASMA is to acknowledge up front that no one
size fits all when it comes to which techniques to use, and which
capabilities to employ. Consequently, PLASMA is engineered to allow
people to take just what they need, discard what they do not, and
integrate extensions to suit their particular requirements in a
straighforward manner. The design strategy is to focus on a core
framework defininig the principal abstractions and interactins induced
by our underlying paradigm. We then provide concrete components to allow
particular assemblies to be defined. With this component-based framework
we have strived to strike a balance between flexibility and efficiency.
