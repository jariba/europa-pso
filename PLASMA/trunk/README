Known areas of performance improvement:
1. Filtered Flaw Caching.
2. Object Filtering.
3. Deletion of the database.
4. Update of variables from Temporal Network.
5. Splitting merged tokens in a non-chronological backtrack.
6. Improve exchange of data in TemporalPropagator with direct use of IntervalInt domain and direct
calculation of duration variables.

M_6:
1. Fixed bug in temporal network propagator execute method. It was masking side-effects which required further
propagation. Note that executing StartEndDuration may impact and of the start, end or duration variables.
2. Still have open bug where the Rover model backtracks when it shouldn't, at the direction of the TemporalNetwork,
and arising out of Merging and Activation decisions.
3. Still have open bug where transaction logging and replay leads to spurious behavior if done repeatedly. The general
symptom is that we get the CE in an inconsistent state when trying to constrain token(s) on an object.
4. Have implemented a write mechanism on the DbClient which gives us a pretty good checksum as a string for comparing
the copied plan.

M_5:
1. Principal Transaction Logging and replay infrastructure completed.

M_4:
1. Working version of DecisionPlay and Replay
2. Some minor fixes to the NddlCompiler
3. A bunch of new Constraints ported from EUROPA
4. Introduction of Constraint test harness
5. Other minor bug fixes

M_3:
1. Nddl Compiler Cleanup
2. Added Factories to NddlCompiler generation.
3. Added DbClient for playing logged transactions.

M_2:
1. Working integration of the Temporal Network
2. Support for nested guards.

M_1:
1. Baseline TAG.