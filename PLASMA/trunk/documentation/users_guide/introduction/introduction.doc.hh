/** * @page introduction Introduction * * @section planning Planning, Scheduling, and Automated Planning * * Planning, for our purposes, can be thought of as determining all the small tasks that must be carried out in order to accomplish a goal. * Let's say your goal is to buy a gallon of milk. It may sound like a simple task, but if you break it down, there are many small tasks  * involved: obtain keys, obtain wallet, start car, drive to store, find and obtain milk, purchase milk, etc. Planning also takes into account * rules, called constraints, which control when certain tasks can or cannot happen.  Two of the many constraints in this example are, you must * obtain your keys and wallet before driving to the store and you must obtain the milk before purchasing it.  * * Here is what a simple plan for buying milk at the store might look like: * @image html timelinePurchaseMilk.jpg * * Scheduling can be thought of as determining whether adequate resources are available to carry out the plan. Two resources that scheduling would  * have to take into account for our example above are fuel and time. If it takes two gallons of gas to get to the store and back and your car only has  * one gallon, you must develop a plan that includes a stop at the gas station. If it takes 5 minutes to drive to the store, the store closes at 10:00,  * and it is currently 9:30, you must also take that time constraint into account when scheduling your task. * * The automated planning community provides techniques for representing the actions that an agent may take in the world and the goals  * it wants to achieve together. These are complemented with computer software for automatically generating a plan that is composed *  of actions that when executed will obtain the goals of the agent.  * * In our above example, we as users would describe each of the actions available to us together with the goal of having milk at home.  * The automated planning software would generate the timeline with the plan for going out a purchasing the milk.   * * The automated planning process may also involve the user in a mixed-initiative form of interaction where they user can specify portions  * of the plan that the automated planner should complete or the automated planner can ask the user for guidance on planning decisions such  * as which actions to use for a particular goal.  * * There is a wealth of literature on automated planning. The <a href="http://ic.arc.nasa.gov/tech/groups/index.php?gid=8&&ta=2">Planning and Scheduling Group</a> at NASA Ames  * NASA Ames' Planning and Scheduling group provides a good entry point for applications related to spacecraft. The annual  * <a href="http://www.icaps-conference.org">International Conference on Automated Planning and Scheduling</a> provides a excellent entry point into the broader research community. * * @section europa2intro EUROPA2 * * EUROPA2 is a fast, flexible, extensible, and reusable technology platform for building planning and scheduling applications for space exploration.  * Its predecessor, EUROPA, has been deployed as the core planning technology for a variety of NASA research and mission applications. A notable example  * is MAPGEN, the ground-based activity planning system for the Mars Exploration Rover (MER) mission. EUROPA2 is reimplementation of EUROPA that is significantly *  faster and more easily extended through a focus on state-of-the art software engineering.   *  * EUROPA2 (Extensible Universal Remote Operations Architecture) is a component-based software library for representing and reasoning with plans. It is  * analogous to component-based software in over areas like CLARAty for robotics or ILOG for scheduling.   * * @subsection usecases Use-Cases * There are three major use-cases for deploying EUROPA2. We first need to define two core concepts. A <b>planner</b> is the software Europa2 * provides for generating plans. A <b>plan database</b> is the software Europa2 provides for storing and maintaining goals and plans. The plan database is  * modified during the planning process as a plan is developed. * @image html applications.png Uses Cases * <ul> * <li><b>Batch Planner</b>. The system is passed a partial plan that may include just the goals the planner is to plan for or it could also  * include some actions that must be included in the plan. This information is stored in a plan database. The planner then operates on the plan  * database to produce the plan. Planning is an incremental process so it may be interrupted at anytime and a partially completed plan can be  * recovered. * <li><b>Mixed-Initiative Planner</b>. The planner is used in concert with a user. The user may introduce goals into a plan, make planning decisions,  * and change or undo decisions previously made by the planner. This is the use-case used by the MER mission.  * <li><b>On-Board Planner</b>. The planner is deployed on board an agent (space craft, robot) and is connected to an execution executive.  * The executive executes the plan produced by the planner. If the world changes in unexpected ways or the execution of plan steps fails,  * the executive calls back to the planner to request that it re-plan to work around the changes and produce a new plan for achieving the goals. This * use-case is used by Europa2's users who have deployed the planner on-board experimental robots.  * * @section readersguide Reader's Guide *  * This manual is divided into the following sections * * <ul> * <li> <b>Getting Started</b> will guide you through the installation of EUROPA2 and familarize you with its capabilits on a small application based on a  *      planatary rover. * <li> <b>Background concepts</b> introuduces the funermental concepts that you must understand in order to start developing your own Europa2 applicatoins * <li> <b>Domain and Problem Description</b> in NDDL details our langauge for modelling application domains and problem instances within those domains. * <li> <b>Visaualizaiion and Troubleshooting</b> will step you through the debugging of EUROPA2 models by detailing how to inspect the planner's behaviour * <li> <b>System Architecture and Assembly</b> provides advanced users with information on how to confiure EUROPA2 * <li> <b>LORAX Case Study</b> detailes the application of EUROPA2 and customization of its behaviour for that domain. * </ul> * * @section projects Projects * * <ul> * <li>MAPGEN * <li>MSL * <li>DESOPS * <li>Pico * <li>CDS * <li>LITA * <li>LORAX * <li>MIP * </ul>  * * @section contactandsupport Contacts and Support * * @subsection loggingbugs Logging Bugs and Feature Requests * * To report a bug in EUROPA2 or to request new functionality please e-mail your request to the following address: * <ul> * <li> <a href="mailto:europa-help@nx.arc.nasa.gov">europa-help@nx.arc.nasa.gov</a>. * </ul> * * We will enter you problem or request into our internal issue tracking system called GNATS. You will recive a e-mail * message when it has been entered and when progress on it is updated. When resolved, its state will be set to <i>feeback</i> * We will give you a few days to inspect the update and close the issue in the GNATS system yourself. Will will close it * ourselves after a few days for your conviencance.  * * @subsection deprecation Deprecation Policy * Conor has to spec this. * * @subsection release Release Policy * Conor has to spec this. * * @subsection contribute Contributing to the Library * Conor has to spec this. * * @section ack Acknowledgements * EUROPA 2 is a culmination of many years of research, development and deployment of constraint-based planning * technology. The precursor to EUROPA was HSTS, designed and developed by Nicola Muscettola. HSTS set out the * initial domain description language and essentials of the planning paradigm that became the starting point for * EUROPA, under the leadership of Ari Jonsson. Ari's team included Jeremy Frank, Paul Morris and Will Edgington, who all * made valuable contributions to the development of EUROPA. EUROPA 2 is a further evolution of this line of work, * targeted mainly at making the technology easier to use, more efficient, easier to integrate and easier to extend. The * development of EUROPA 2 has been lead by Conor McGann in collaboration with Andrew Bachmann, Tania Bedrax-Weiss,  * Patrick Daley, Will Edgington, Jeremy Frank, Michael Iatauro, Peter Jarvis, Ari Jonsson, Sailesh Ramakrishnan and  * Will Taylor. Funding for this work has been provided by the NASA Intelligent Systems and Collaborative Decision Systems Programs. * </ul> */