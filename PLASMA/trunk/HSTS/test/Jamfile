SubDir PLASMA HSTS test ;

if ! $(PLASMA_READY) {

#
# Heuristics Tests
#

HSTS_Test_Files = [ FGristFiles AtSubgoalRule HSTSModuleTests DNPConstraints ] ;
ModuleObjects $(HSTS_Test_Files:S=.cc) : HSTS ;

CET_Files = <ConstraintEngine!test>ConstraintTesting ;

# ConstraintTesting.hh is in ConstraintEngine/test, not here.
# !!This doesn't work, however, so I've changed the source to '#include "test/ConstraintingTest.hh"' to see if that works.
# INCLUDES on module-tests.cc += [ FDirName $($(_top)) ConstraintEngine test ] ;

ModuleMain hsts-module-tests : $(HSTS_Test_Files:S=$(SUFOBJ)) $(CET_Files:S=$(SUFOBJ)) module-tests.cc : HSTS : CBPlanner ;
RunModuleMain run-hsts-module-tests : hsts-module-tests ;

LocalDepends tests : run-hsts-module-tests ;

# Commented out tests are failing for various reasons; see each test for more info.
LocalDepends run-hsts-planner-tests :
        monkey-timeline
        monkey-timeline-hacked
        monkey-timeline-hacked2
        monkey-timeline-hacked3
        monkey-timeline-newHeur
        monkey-timeline-extendedHeur
        monkey1-timeline1
        monkey1-timeline-objvar
#       monkey1-timeline-twomonkeys-objvar
#       monkey1-timeline-twomonkeys
#       monkey2-timeline2
#       monkey2-timeline22
        monkey2-timeline23
        robotTests
        roverTest1
        roverTest2
        roverTest3
        roverTest4
        merTest1
        merTest2
#       merTest3  # needs heuristics?!
#       merTest4  # never run by NewPlan?!
        merTest5
#       merTest6  # never run by NewPlan?!
#       merTest7 # never run by NewPlan?!
        merTest8
        merTest9
#       merTest10 # needs heuristics?!
#       merTest11 # needs heuristics?!
#       merTest12 # needs heuristics?!
        merTest13
#       merTest14 # needs heuristics?!
#       merTest15 # needs heuristics?!
#       merTest16 # needs heuristics?!
        merTest17
        merTest18
        merTest1-h
        merTest2-h
#       merTest3-h #runs forever never reaching cutoff
#       merTest4-h #runs forever never reaching cutoff
       merTest5-h
#       merTest6-h # runs forever never reaching cutoff
#       merTest7-h # runs forever never reaching cutoff
       merTest8-h
       merTest9-h
#       merTest10-h # runs forever never reaching cutoff
#       merTest11-h # runs forever never reaching cutoff
#       merTest12-h # runs forever never reaching cutoff
       merTest13-h
#       merTest14-h # runs forever never reaching cutoff
       merTest15-h
#       merTest16-h # runs forever never reaching cutoff
       merTest17-h
       merTest18-h
        gnats-C3
       gnats-NoBranchBug
#        gnats-P4-C3  # times out unless finite bounds
#        gnats-P4-C3eq # times out unless finite bounds
        gnats-SC
        gnats-condasame
        gnats-rover-fixed
        gnats-sum
#       dnp-timeline # runs forever
#       dnp-DNP2 # runs forever
#       dnp-allDSS # runs forever
#       dnp-fourFreeObs # runs forever
#       dnp-DNP3fourFreeObs # runs forever
#       dnp-DNP3 # runs forever
#       dnp-fourFreeObsNotEmpty # runs forever
#       dnp-freeObs # needs heursitics?!
#       dnp-freeObsNoEmpty # needs heuristics?!
#       dnp-tenFreeObs # needs heuristics?!
#        dnp-threeFreeObs # runs forever
#       dnp-twentyFreeObs # runs forever
        dnp-twoFreeObs 
#       dnp-timeline-h # runs forever
       dnp-DNP2-h 
       dnp-DNP23-h
       dnp-allDSS-h 
#       dnp-fourFreeObs-h # times out
#       dnp-DNP3fourFreeObs-h # runs forever
       dnp-DNP3-h
#       dnp-fourFreeObsNotEmpty-h # runs forever
#      dnp-freeObs-h # runs forever
#       dnp-freeObsNoEmpty-h # runs forever
#       dnp-tenFreeObs-h # runs forever
#       dnp-threeFreeObs-h # runs forever
#       dnp-twentyFreeObs-h # runs forever
       dnp-twoFreeObs-h
        ;

#
# EUROPA1 TESTS
#   Converted from NewPlan/ModuleTests/Parser, e.g.
#
ModuleObjects runEUROPAtest.cc : HSTS ;

rule RunEUROPATest {

 local target = $(1) ;
 local initialStates = $(2) ;
 local heur = $(3) ;
 local planId = $(4) ;

 local model ;
 for model in $(initialStates) {
  local exe = $(model:S=) ;
  local hh = $(model:S=.hh) ;
  local cc = [ FGristFiles $(model:S=.cc) ] ;
  local other_cc = runEUROPAtest.cc DNPConstraints.cc ;
  local xml = $(model:S=.xml) ;
  local o = $(cc:S=$(SUFOBJ)) $(other_cc:S=$(SUFOBJ)) ;
  local lib = $(model:S=) ;
  local options = " -i "$(xml) ;
  local addTarget = "" ;
  if $(heur) {
    options += " -h "$(heur) ;
    addTarget = "-h" ;
  }
  if ($planId) {
    options += " -p "$(planId) ;
# All current tests that have a plan id file also have a heuristics file, so this isn't need and is messy to do correctly
#   output = ?? ;
  }
  local output = "run-$(exe).output$(addTarget)" ;

  # create .hh, .cc, .o, and .xml for a .nddl
  Includes $(cc) : $(hh) ;
  NddlCompiler $(hh) $(cc) : $(model) ;
  ModuleObjects $(cc) : NDDL ;

  # create planner with linked model
  ModuleMain $(exe) : $(o) : HSTS ;
  RunModuleMain "run-$(exe)$(addTarget)" : $(exe) : $(options) : : "$(output)" ;
  LocalDepends $(target) : run-$(exe)$(addTarget) ;
 }
}

RunEUROPATest monkey-timeline : timeline0.nddl ;
RunEUROPATest monkey-timeline-hacked : timeline-hacked.nddl ;
RunEUROPATest monkey-timeline-hacked2 : timeline-hacked2.nddl ;
RunEUROPATest monkey-timeline-hacked3 : timeline-hacked3.nddl ;
RunEUROPATest monkey-timeline-newHeur : timeline0.nddl : monkeyNewHeur.xml ;
RunEUROPATest monkey-timeline-extendedHeur : timeline0.nddl : monkeyExtendedHeur.xml ;
RunEUROPATest monkey1-timeline1 : timeline1.nddl ;
RunEUROPATest monkey1-timeline-objvar : timeline-objvar.nddl ;

# Fails to find a plan in 2000 steps.
#   Seems to prefer adding tokens to deciding a compat variable.
#   Reported as GNATS 2849.
RunEUROPATest monkey1-timeline-twomonkeys-objvar : timeline-twomonkeys-objvar.nddl ;

# Fails to find a plan in 2000 steps.
#   Likely same root cause as prior test.
RunEUROPATest monkey1-timeline-twomonkeys : timeline-twomonkeys.nddl ;

# These three fail to find a plan in 1000 steps
#   The first one, at least, seems to not be enforcing the neq() constraints near line 87 of monkey2.nddl
#     and still does not find a plan within 3000 steps.
#   Reported as GNATS 2850.
RunEUROPATest monkey2-timeline2 : timeline2.nddl ; 
RunEUROPATest monkey2-timeline22 : timeline22.nddl ;

# Working
RunEUROPATest monkey2-timeline23 : timeline23.nddl ;

RunEUROPATest robotTests : req1.nddl ;

RunEUROPATest roverTest1 : rover-test.nddl ;
RunEUROPATest roverTest3 : rover3-test.nddl ;
RunEUROPATest roverTest4 : rover4-test.nddl ;

RunEUROPATest roverTest2 : multrover-test.nddl ;

# These use constraint tokens, which Europa2 (PLASMA) does not support.
#   Verified as mentioned in PLASMA/MigrationNotes (entry 8 currently).
# RunEUROPATest roverCTTests : rover2-test.nddl rover2a-test.nddl rover2b-test.nddl ;

# Working
RunEUROPATest merTest1 : R1-files-p1.nddl ;
RunEUROPATest merTest2 : R1-files-p2.nddl ;

# Failing with no error message
#   First wants over 2GB of RAM, so it is likely to be the limits in System/test/autobuild.
#   Other MER related failures may have similar causes.
# First two were never run by NewPlan tests without heuristics files.
RunEUROPATest merTest3 : R1-files-p3.nddl ;
# Third was not being run by NewPlan tests at all.
RunEUROPATest merTest4 : R2-files-R21-Bill.nddl ;

# Working
RunEUROPATest merTest5 : R2-files-R21-IDD1.nddl ;

# Failing with no error message
#   Next one, at least, wants over 1GB of RAM.
# These two were also not being run by any NewPlan tests.
RunEUROPATest merTest6 : R2-files-R21-IDD2.nddl ;
RunEUROPATest merTest7 : R2-files-R21-IDD3.nddl ;

# Working
RunEUROPATest merTest8 : R2-files-R21-PMA1.nddl ;
RunEUROPATest merTest9 : R2-files-R21-PMA2.nddl ;

# Failing with no error message
#   First wanted more than 1GB of RAM at only 63 seconds of CPU time.
#   Also, the Debug.cfg file was either ignored or cerr's buffer was not flushed.
# All three were never run by NewPlan tests without the heuristics file.
RunEUROPATest merTest10 : mer-1.nddl ;
RunEUROPATest merTest11 : mer-bill-2.nddl ;
RunEUROPATest merTest12 : mer-bill.nddl ;

# Working
RunEUROPATest merTest13 : mer-idd1.nddl ;

# Failing with no error message
#   First wanted more than 1GB of RAM at only 26 CPU seconds and also had no output despite Debug.cfg.
# All three were never run by NewPlan tests without the heuristics file.
RunEUROPATest merTest14 : mer-idd2.nddl ;
RunEUROPATest merTest15 : mer-idd3.nddl ;
RunEUROPATest merTest16 : mer-pma-comm.nddl ;

# Working
RunEUROPATest merTest17 : mer-pma1.nddl ;
RunEUROPATest merTest18 : mer-pma2.nddl ;

# Same set as just above plus the heuristics and no branch files.

#Working
RunEUROPATest merTest1-h : R1-files-p1.nddl : mer-p1-3.xml : mer-p1-3.nobr ;
RunEUROPATest merTest2-h : R1-files-p2.nddl : mer-p1-3.xml : mer-p1-3.nobr ;

# Runs forever without reaching cutoff of 1000 nodes, so it must be caught
# up in a  loop in propagation.  Should investigate, however.
RunEUROPATest merTest3-h : R1-files-p3.nddl : mer-p1-3.xml : mer-p1-3.nobr ;
RunEUROPATest merTest4-h : R2-files-R21-Bill.nddl : mer-p1-3.xml : mer-p1-3.nobr ;

# Working
RunEUROPATest merTest5-h : R2-files-R21-IDD1.nddl : mer-p1-3.xml : mer-p1-3.nobr ;

# Runs forever
RunEUROPATest merTest6-h : R2-files-R21-IDD2.nddl : mer-p1-3.xml : mer-p1-3.nobr ;
RunEUROPATest merTest7-h : R2-files-R21-IDD3.nddl : mer-p1-3.xml : mer-p1-3.nobr ;

# Working
RunEUROPATest merTest8-h : R2-files-R21-PMA1.nddl : mer-p1-3.xml : mer-p1-3.nobr ;
RunEUROPATest merTest9-h : R2-files-R21-PMA2.nddl : mer-p1-3.xml : mer-p1-3.nobr ;

# Runs forever
RunEUROPATest merTest10-h : mer-1.nddl : mer-heur-high.xml : mer-heur-high.nobr ;
RunEUROPATest merTest11-h : mer-bill-2.nddl : mer-heur-high.xml : mer-heur-high.nobr ;
RunEUROPATest merTest12-h : mer-bill.nddl : mer-heur-high.xml : mer-heur-high.nobr ;

# Working
RunEUROPATest merTest13-h : mer-idd1.nddl : mer-heur-high.xml : mer-heur-high.nobr ;

# Runs forever
RunEUROPATest merTest14-h : mer-idd2.nddl : mer-heur-high.xml : mer-heur-high.nobr ;

# Working
RunEUROPATest merTest15-h : mer-idd3.nddl : mer-heur-high.xml : mer-heur-high.nobr ;

# Runs forever
RunEUROPATest merTest16-h : mer-pma-comm.nddl : mer-heur-high.xml : mer-heur-high.nobr ;

# Working
RunEUROPATest merTest17-h : mer-pma1.nddl : mer-heur-high.xml : mer-heur-high.nobr ;
RunEUROPATest merTest18-h : mer-pma2.nddl : mer-heur-high.xml : mer-heur-high.nobr ;

# Working
RunEUROPATest gnats-C3 : C3-init.nddl ;

# Exhausted the search
RunEUROPATest gnats-NoBranchBug : NoBranchBug-init.nddl : NoBranchBug.xml : NoBranchBug.nobr ;

# These two take multiple hours without completing on Token for some reason and may be infinite loop or similar.
#   Reported as GNATS 2796.
# Avoided by constraining token parameters within [-1000 1000] rather than allowing [-INF INF].
RunEUROPATest gnats-P4-C3 : P4-C3-init.nddl ;
RunEUROPATest gnats-P4-C3eq : P4-C3eq-init.nddl ;

# These four work.
RunEUROPATest gnats-SC : SC-init.nddl ;
RunEUROPATest gnats-condasame : condasame-init.nddl ;
RunEUROPATest gnats-rover-fixed : rover-fixed-init.nddl ;
RunEUROPATest gnats-sum : sum-init.nddl ;

# DNP tests need the DNP specific constraints.

# Failing with no error message
#   Wanted over 1GB of RAM at 16 CPU seconds.
# NewPlan's simplePlan finds a plan at depth 56 after 70 nodes of search.
# Creating a ChoiceId for each of nearly 90 _million_ values for a particular integer variable.
RunEUROPATest dnp-timeline : DNP.timeline.nddl ;

# These fail; no idea why yet.
# None are run by NewPlan tests without a heuristics file.
# Probably fail due to creating huge numbers of ChoiceId's like the prior test.
RunEUROPATest dnp-DNP2 : DNP2.timeline.nddl ;
RunEUROPATest dnp-allDSS : allDSS.nddl ;
RunEUROPATest dnp-fourFreeObs : fourFreeObs.nddl ;
RunEUROPATest dnp-DNP3fourFreeObs : DNP3.fourFreeObs.nddl ;
RunEUROPATest dnp-DNP3 : DNP3.timeline.nddl ;
RunEUROPATest dnp-fourFreeObsNotEmpty : fourFreeObs-initBufNotEmpty.nddl ;

# These two fail to find plans in 1000 steps.
# None are run by NewPlan tests without a heuristics file.
# Probably fail due to creating huge numbers of ChoiceId's like dnp-timeline.
RunEUROPATest dnp-freeObs : freeObs.nddl ;
RunEUROPATest dnp-freeObsNoEmpty : freeObs.noEmpty.nddl ;

# Failing with no error message
# None are run by NewPlan tests without a heuristics file.
# Probably fail due to creating huge numbers of ChoiceId's like dnp-timeline.
RunEUROPATest dnp-tenFreeObs : tenFreeObs.nddl ;

# Running for a while - not sure if it fails or not
RunEUROPATest dnp-threeFreeObs : threeFreeObs.nddl ;

# This one fails with no error message
RunEUROPATest dnp-twentyFreeObs : twentyFreeObs.nddl ;

# Working
RunEUROPATest dnp-twoFreeObs : twoFreeObs.nddl ;

# Same set as just prior set plus heuristics and no branch info.

# Runs for a while
RunEUROPATest dnp-timeline-h : DNP.timeline.nddl : DNPheur2.xml ;

# Working
RunEUROPATest dnp-DNP2-h : DNP2.timeline.nddl : DNP2heur.xml ;
RunEUROPATest dnp-DNP23-h : DNP2.timeline.nddl : DNP3heur.xml ;
RunEUROPATest dnp-allDSS-h : allDSS.nddl : DNP2heur3.xml ;

# Times out
RunEUROPATest dnp-fourFreeObs-h : fourFreeObs.nddl : DNP2heur3.xml ;

# Runs for a while
RunEUROPATest dnp-DNP3fourFreeObs-h : DNP3.fourFreeObs.nddl : DNP3heur.xml : DNP3nobr ;

# Working
RunEUROPATest dnp-DNP3-h : DNP3.timeline.nddl : DNP3heur.xml : DNP3nobr ;

# Runs for a while
RunEUROPATest dnp-fourFreeObsNotEmpty-h : fourFreeObs-initBufNotEmpty.nddl : DNP3heur.xml : DNP3nobr ;
RunEUROPATest dnp-freeObs-h : freeObs.nddl : DNP3heur.xml : DNP3nobr ;
RunEUROPATest dnp-freeObsNoEmpty-h : freeObs.noEmpty.nddl : DNP3heur.xml : DNP3nobr ;
RunEUROPATest dnp-tenFreeObs-h : tenFreeObs.nddl : DNP3heur.xml : DNP3nobr ;
RunEUROPATest dnp-threeFreeObs-h : threeFreeObs.nddl : DNP3heur.xml : DNP3nobr ;
RunEUROPATest dnp-twentyFreeObs-h : twentyFreeObs.nddl : DNP3heur.xml : DNP3nobr ;

# Working
RunEUROPATest dnp-twoFreeObs-h : twoFreeObs.nddl : DNP3heur.xml : DNP3nobr ;

} # PLASMA_READY
