// ../ModuleTests/Parser/gnats/rover-fixed.ddl

enum Locations { X0, X1, X2, X3 } 

class Rover_Class;
class Rover_Class___Location_SV;
class Rover_Class___CHAMP_SV;
class Rover_Class___Hazcam_SV;

class Rover_Class___Location_SV extends Timeline {
  predicate At {
    Locations location;
  }

  predicate PilotMove {
    Locations from;
    Locations to;
    bool success;
    float energyConsumed;
  }

  Rover_Class __DDL__object;
  Rover_Class___Location_SV(Rover_Class object) {
    __DDL__object = object;
  }
}

class Rover_Class___CHAMP_SV extends Timeline {
  predicate CHAMP_Idle {
  }

  predicate IPPlaceInstrument {
    Locations at_loc;
    bool success;
    float energyConsumed;
  }

  Rover_Class __DDL__object;
  Rover_Class___CHAMP_SV(Rover_Class object) {
    __DDL__object = object;
  }
}

class Rover_Class___Hazcam_SV extends Timeline {
  predicate Hazcam_Idle {
  }

  predicate ImageAcquire {
    Locations at_loc;
    bool success;
    float energyConsumed;
  }

  Rover_Class __DDL__object;
  Rover_Class___Hazcam_SV(Rover_Class object) {
    __DDL__object = object;
  }
}

class Rover_Class {
  Rover_Class___Location_SV Location_SV;
  Rover_Class___CHAMP_SV CHAMP_SV;
  Rover_Class___Hazcam_SV Hazcam_SV;
  Rover_Class() {
    Location_SV = new Rover_Class___Location_SV(this);
    CHAMP_SV = new Rover_Class___CHAMP_SV(this);
    Hazcam_SV = new Rover_Class___Hazcam_SV(this);
  }
}

Rover_Class___Location_SV::At {
  eq(duration, [1 +inf]);
  met_by(Rover_Class___Location_SV.PilotMove s0);
    eq(s0.to, location);
    eq(s0.success, true);
  meets(Rover_Class___Location_SV.PilotMove s1);
    eq(s1.from, location);
}

Rover_Class___Location_SV::PilotMove {
  eq(duration, [1 +inf]);
  neq(from, to);
  eq(energyConsumed, [0.00000 518400.]);
  met_by(Rover_Class___Location_SV.At s0);
    eq(s0.location, from);
  meets(Rover_Class___Location_SV.At s1);
    eq(s1.location, to);
  contained_by(Rover_Class___Hazcam_SV.Hazcam_Idle s2);
  contained_by(Rover_Class___CHAMP_SV.CHAMP_Idle s3);
}

Rover_Class___CHAMP_SV::CHAMP_Idle {
}

Rover_Class___CHAMP_SV::IPPlaceInstrument {
  eq(duration, [1 +inf]);
  eq(energyConsumed, [0.00000 518400.]);
  met_by(Rover_Class___CHAMP_SV.CHAMP_Idle s0);
  meets(Rover_Class___CHAMP_SV.CHAMP_Idle s1);
  contained_by(Rover_Class___Location_SV.At s2);
    eq(s2.location, at_loc);
  contained_by(Rover_Class___Hazcam_SV.Hazcam_Idle s3);
}

Rover_Class___Hazcam_SV::Hazcam_Idle {
}

Rover_Class___Hazcam_SV::ImageAcquire {
  eq(duration, [1 +inf]);
  eq(energyConsumed, [0.00000 518400.]);
  met_by(Rover_Class___Hazcam_SV.Hazcam_Idle s0);
  meets(Rover_Class___Hazcam_SV.Hazcam_Idle s1);
  contained_by(Rover_Class___Location_SV.At s2);
    eq(s2.location, at_loc);
  contained_by(Rover_Class___CHAMP_SV.CHAMP_Idle s3);
}

