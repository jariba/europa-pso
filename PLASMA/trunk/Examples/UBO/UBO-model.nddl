/**
/**
* @file UBO-model.nddl
* @author Automated ProGen/max RCPSP input format converter to NDDL (David Rijsman)
*/

#include "Resources.nddl"
#include "PlannerConfig.nddl"

class CapacityResource extends Reusable 
{
    CapacityResource( float mincapacity, float maxcapacity ) 
    {
        super( maxcapacity, mincapacity );
    } 
}

class Allocation 
{
    int m_identifier;
    float m_quantity;
    CapacityResource m_resource;

    Allocation( CapacityResource resource, int activityId, float quantity ) 
    {
        m_identifier = activityId;
        m_resource = resource;
        m_quantity = quantity;
    }
}

class ActivityTimeline extends Timeline
{
   int id_;
   
   ActivityTimeline(int i)
   {
       id_ = i;
   }
   
   predicate act {};
}

ActivityTimeline::act
{
}

class ProblemInstance extends Object 
{
    predicate Activity {
	int m_identifier;
	ActivityTimeline timeline;
    }
}

ProblemInstance::Activity
{
    //eq(start, [ 0 +inf ]);
    equals(timeline.act);

    Allocation allocations;
    eq( allocations.m_identifier, m_identifier );

    foreach( a in allocations ) {
        equals( a.m_resource.uses u );
        eq( duration, u.duration); // Duration is known, so force propagation
        eq( u.quantity, a.m_quantity );
    }
}

