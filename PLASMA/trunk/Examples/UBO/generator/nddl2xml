#!/bin/sh -f
# -*- Mode: sh -*-
#
# Author: David Rijsman

PARSER_LOC=../PLASMA/NDDL/core/jars/nddl.jar

if [ -z $1 ]
then
  echo " "
  echo "Usage:"
  echo " "
  echo " xiddl2xml <initial-state.nddl> [parser]"
  echo " "
  echo "This script will parse an initial state in NDDL and translate it into"
  echo "XML format for the EUROPA transaction player."
  echo " "
  echo " <initial-state.nddl> Input file containing the initial state (and model)"
  echo " [parser]             Location of the parser, optional, default value '"$PARSER_LOC"'"
  echo " "
  echo "Output of this script is <initial-state.nddl>.xml"

  exit -1
fi

if [ ! -z $2 ]
then
  PARSER_LOC=$2
fi


if [ -e $PARSER_LOC ]; then
  PARSER=$PARSER_LOC
else
  echo " "
  echo "[`date +%T`] Expected '"$PARSER_LOC"' to exist as a location of the parser, it does not or not the right permissions."
  echo "[`date +%T`] Finished with an error."
  exit -1
fi


#Set the minimum Java version requirements for the nddl parser/compiler
JAVAVERSTR="Minimum Java version is 1.4.2"
MINJAVA_I=1
MINJAVA_J=4
MINJAVA_K=2
BADJAVA=0

#Check for minimum Java version
JAVAVER=`java -version 2>&1 | egrep 'java version .[0-9]\.[0-9]+\.[0-9]+' | cut -d"\"" -f2`
if [ -n "$JAVAVER" ]
then
  i=`echo $JAVAVER | cut -d. -f1`
  j=`echo $JAVAVER | cut -d. -f2`
  k=`echo $JAVAVER | cut -d. -f3`
# ignore version info after the "_" as in 1.4.2_05
  k=`echo $k | cut -d_ -f1`
  if [ $i -lt $MINJAVA_I ]
  then 
    BADJAVA=1 
  else
    if [ $i -le $MINJAVA_I -a $j -lt $MINJAVA_J ]
    then
      BADJAVA=1 
    else
      if [ $i -le $MINJAVA_I -a $j -le $MINJAVA_J -a $k -lt $MINJAVA_K ]
      then
        BADJAVA=1 
      fi
    fi
  fi
  if [ $BADJAVA -eq 1 ]
  then
    echo "  Java version found is too old for nddl-compiler/parser: version " $JAVAVER 
    echo " " $JAVAVERSTR
    echo "Gokouun o inorimasu."
    exit -1
  fi
else
  BADJAVA=1 
  echo "Did not find any version of java in search path"
  echo " " $JAVAVERSTR
  echo "Gokouun o inorimasu."
  exit -1
fi

if [ -n $JAVA ]; then
  if [ -n $JAVA_HOME ]; then
    JAVA=java;
  else
    JAVA=$JAVA_HOME/bin/java;
  fi;
fi

echo "[`date +%T`] Started transalting '"$1"' into XML format."

$JAVA -jar $PARSER --NddlParser $1

return_value=$?

if [ $return_value -ne 0 ]
then
 echo "[`date +%T`] Finished with an error."
else
 echo "[`date +%T`] Finished correct (output is '"$1".xml')"
fi
