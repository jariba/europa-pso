#include "../../NDDL/core/PlannerConfig.nddl"

class Location{
 string name;
 Location(string _name){
  name = _name;
 }
}

class Path{
 Location from, to;
 Path(Location _from, Location _to){
  from = _from;
  to = _to;
 }
}

class Rover{
 predicate Going{
  Location from;
  Location to;
  neq(from, to);
 }
}

Rover::Going{
 Path path : {
  eq(path.from, from);
  eq(path.to, to);
 };
}

// Create initial state to allow a plan to be found
PlannerConfig world = new PlannerConfig();

Location rock = new Location("ROCK");
Location hill = new Location("HILL");
Location lander = new Location("LANDER");
Location martianCity = new Location("MARTIAN_CITY");
Location crater = new Location("CRATER");

Path p1 = new Path(rock, hill);
Path p2 = new Path(lander, hill);
Path p3 = new Path(martianCity, hill);
Path p4 = new Path(hill, lander);

Rover rover = new Rover();

any(Rover.Going g);
g.from.specify(hill);
g.to.specify(lander);
eq(g.start, world.m_horizonStart);
eq(g.end, world.m_horizonEnd);

close();