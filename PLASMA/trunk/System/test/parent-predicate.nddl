#include "PlannerConfig.nddl"
#include "Plasma.nddl"

/**
 * Test that class hierarchy is checked when searching for predicate definitions.
 * GNATS 2529
 */

class Battery extends Resource {
 // Must explicitly delcare the predicate so we can allocate in a transaction
 predicate change{}

 Battery(float ic, float ll_min, float ll_max) {
  super(ic, ll_min, ll_max, 0.0, 0.0, -inff, -inff);
 }
}

class Rover{
 Battery battery;

 predicate Move{}

 Rover(Battery b){
  battery = b;
 }
}

Rover::Move{
  contains( Battery.change change1 );
}

// Allocation of objects
PlannerConfig world = new PlannerConfig(0, 100, 350);
Battery mainBattery = new Battery(30.0, 0.0, 50.0);
Rover rover = new Rover(mainBattery);
close();

rejectable(Rover.Move indirectChange);
rejectable(Battery.change directChange);
mainBattery.constrain(directChange);
