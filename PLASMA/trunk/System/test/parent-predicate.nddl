#include "../../NDDL/core/PlannerConfig.nddl"
#include "../../NDDL/core/Plasma.nddl"

/**
 * Test that class hierarchy is checked when searching for predicate definitions.
 * GNATS 2529
 */

class Battery extends Resource {
 Battery(int ic, int ll_min, int ll_max) {
  super(ic, ll_min, ll_max, 0, 0, MINUS_INFINITY, MINUS_INFINITY);
 }
}

class Rover{
 Battery battery;

 predicate Move{}

 Rover(Battery b){
  battery = b;
 }
}

Rover::Move{
  contains( Battery.change change1 );
}

// Allocation of objects
PlannerConfig world = new PlannerConfig(0, 100, 350);
Battery mainBattery = new Battery(30, 0, 50);
Rover rover = new Rover(mainBattery);
close();

rejectable(Rover.Move indirectChange);
rejectable(Battery.change directChange);
mainBattery.constrain(directChange);
