#!/bin/bash
# $Id: autobuild,v 1.82 2004-09-21 01:54:14 wedgingt Exp $
#
# Automatically build some variants of the PLASMA planner system

# set -x

# Usually, this is run via cron, which does not use the usual $PATH
PATH=/usr/java/j2sdk1.4.2_04/bin:/usr/local/jam2.4:/usr/local/bin:"$PATH"
JAVA_HOME=/usr/java/j2sdk1.4.2_04
export PATH JAVA_HOME

startdir="`dirname $0`"
startdir="`cd $startdir; pwd`"
cd "$startdir"

# Don't run this script more than once in the same directory.
mkdir working || exit 1

trap 'rmdir $startdir/working' 0

rm -rf Old
test -d Prior && mv Prior Old

info=`uname -a; echo ''; g++ --version ; hostname ; pwd`

echo "$info"

# Address to mail exit status messages to.
email=checkins@postdoc.arc.nasa.gov

# Refuse to run if a prior check out is present.
if test -d PLASMA -o -d Prior
then
  (echo "$info";
     echo '';
     echo 'PLASMA directory already present or configuration botch; aborting autobuild') | \
    Mail -s 'PLASMA Autobuild on '"`hostname`"' in '"`pwd`"' aborted' "$email"
  mkdir working/aborted
  exit 2
fi

mkdir Prior
mv cvs.PLASMA jam.* Prior/

# The (compilation) variants to build and test.
variants='DEV OPTIMIZED PROFILE'

# The different ways of building the libraries.
libmethods='STATIC NONE'

# CVS info
CVS_RSH=ssh
export CVS_RSH
CVSROOT='copernicus.arc.nasa.gov:/home/cvs/ISG-Repository'
export CVSROOT

# Don't try to use X11 (mostly to prevent Purify from doing so)
DISPLAY=
export DISPLAY

# Make sure that libstdc++.so is in this
LD_LIBRARY_PATH='/usr/lib'
export LD_LIBRARY_PATH

# Debug memory allocation; one variant fails in allocation presently here on Slayton
MALLOC_CHECK_=2
export MALLOC_CHECK_

# Apply limits; some compiles run out of swap space.
ulimit -c 300000
ulimit -d 2000000
ulimit -s 2000000
ulimit -v 2000000

# Print the limits so it is obvious what they are when something goes wrong.
ulimit -a

function cvsCmd() {
  if test "$1" != 'co' -a "$1" != 'tag' -a "$1" != 'update'
  then
    mkdir PLASMA/autobuild.bug
    (echo "$info"; echo ''; echo 'cvsCmd() called with unexpected arguments: '"$*") | \
        Mail -s 'PLASMA autobuild bug on '"`hostname`"' in '"`pwd`"' failed' "$email"
    mkdir working/failed
    exit 22
  fi
  echo Calling cvs $* at "`date`" ... >> cvs.PLASMA 2>&1
  cvs $* >> cvs.PLASMA 2>&1
  status=$?
  echo '"cvs '"$*"' in '"`pwd`"' exited '"$status"
  if test "$status" != 0
  then
    mkdir PLASMA/cvs.failed
    (echo "$info"; echo ''; echo '"cvs '"$*"' failed; aborting autobuild'; tail cvs.PLASMA) | \
        Mail -s 'PLASMA Autobuild cvs on '"`hostname`"' in '"`pwd`"' failed' "$email"
    mkdir working/failed
    exit "$status"
  fi
}

function cvsCheckOut() {
  cvsCmd co -r AutobuildTesting PLASMA
}

function cvsTagTest() {
  cvsCmd tag AutobuildTesting PLASMA
}

function cvsRemoveTag() {
  cvsCmd tag -d AutobuildTesting PLASMA
}

function cvsUpdate() {
  cvsCmd update -d -P -A PLASMA
}

function cvsTagPassed() {
  cvsCmd tag -F $1 PLASMA
}

function jamCmd() {
  jam $args $1 > jam.$2.$var.$libmethod 2>&1
  status=$?
  echo 'jam '"$args $1"' in '"`pwd`"' exited '"$status"
  if test $status -ne 0
  then
    (echo "$info";
     echo '';
     echo 'PPW_Config='"$PPW_Config"'; export PPW_Config';
     echo 'jam '"$args $1"' in '"`pwd`"' exited '"$status";
      more jam.$2.$var.$libmethod < /dev/null) | \
        Mail -s 'PLASMA Autobuild jam '"$args $1"' on '"`hostname`"' failed' "$email"
    mkdir working/failed
    exit $status
  fi
}

# These first two are needed if nothing has the AutobuildTesting tag.
cvsCmd co PLASMA/README
cvsCmd tag -F AutobuildTesting PLASMA/README

cvsCheckOut
cvsRemoveTag
cvsUpdate
cvsTagTest

for var in $variants
do
  for libmethod in $libmethods
  do
    cvsCheckOut
    cd PLASMA
    args='-sVARIANTS='"$var"' -sLIBRARIES='"$libmethod"
    jamCmd '' build
    for target in tests run-nddl-tests run-nddl-planner-tests
    do
      jamCmd $target $target
    done
    jamCmd clean clean
    PPW_Config="$startdir"'/PLASMA/CBPlanner/component/sample-ppw-config'
    export PPW_Config
    jamCmd run-nddl-planner-tests withPPW
    jamCmd clean clean
    (echo "$info"; echo ''; echo 'PLASMA autobuild and tests of variant '"$var"' with library method '"$libmethod"' in '"`pwd`"' passed.';
        more jam.*.$var.$libmethod < /dev/null) | \
      Mail -s 'PLASMA Autobuild '"$var"' '"$libmethod"' on '"`hostname`"' passed' "$email"
    # Save the jam output files.
    mv -f jam.* ..
    cd ..
    # Remove everything so that each variant is tested completely independently.
    rm -rf PLASMA
  done
done

cvsCheckOut
tag=AutobuildPassed_"`hostname | sed -e 's/[.].*//'`"
cvsTagPassed $tag
rm -rf PLASMA

(echo "$info";
    echo '';
    echo "All builds, tests, and cleans passed for each variant (of $variants) and";
    echo "  each method of building the libraries (of $libmethods).";
    echo "Tagged: 'cvs tag -F $tag'") | \
  Mail -s 'PLASMA Autobuild on '"`hostname`"' passed.' "$email"

date > lastCompleted

exit 0
