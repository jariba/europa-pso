#!/bin/sh
# $Id: autobuild,v 1.74 2004-09-17 06:12:44 wedgingt Exp $
#
# Automatically build some variants of the PLASMA planner system

# set -x

# Usually, this is run via cron, which does not use the usual $PATH
PATH=/usr/java/j2sdk1.4.2_04/bin:/usr/local/jam2.4:/usr/local/bin:"$PATH"
JAVA_HOME=/usr/java/j2sdk1.4.2_04
export PATH JAVA_HOME

startdir="`dirname $0`"
startdir="`cd $startdir; pwd`"
cd "$startdir"

# Don't run this script more than once in the same directory.
mkdir working || exit 1

trap 'rmdir $startdir/working' 0

rm -rf Old
test -d Prior && mv Prior Old

info=`uname -a; echo ''; g++ --version ; hostname ; pwd`

echo "$info"

# Address to mail exit status messages to.
email=checkins@postdoc.arc.nasa.gov

# Refuse to run if a prior check out is present.
if test -d PLASMA -o -d Prior
then
  (echo "$info";
     echo '';
     echo 'PLASMA directory already present or configuration botch; aborting autobuild') | \
    Mail -s 'PLASMA Autobuild on '"`hostname`"' in '"`pwd`"' aborted' "$email"
  mkdir working/aborted
  exit 2
fi

mkdir Prior
mv jam.* Prior/

# The (compilation) variants to build and test.
variants='DEV OPTIMIZED PROFILE'

# The different ways of building the libraries.
libmethods='STATIC NONE'

# CVS info
CVS_RSH=ssh
export CVS_RSH
CVSROOT='copernicus.arc.nasa.gov:/home/cvs/ISG-Repository'
export CVSROOT

# Don't try to use X11 (mostly to prevent Purify from doing so)
DISPLAY=
export DISPLAY

# Make sure that libstdc++.so is in this
LD_LIBRARY_PATH='/usr/lib'
export LD_LIBRARY_PATH

# Debug memory allocation; one variant fails in allocation presently here on Slayton
MALLOC_CHECK_=2
export MALLOC_CHECK_

# Apply limits; some compiles run out of swap space.
ulimit -c 300000
ulimit -d 2000000
ulimit -s 2000000
ulimit -v 2000000

# Print the limits so it is obvious what they are when something goes wrong.
ulimit -a

for var in $variants
do

  for libmethod in $libmethods
  do
  
    cvs co PLASMA > cvs.co.PLASMA 2>&1
    status=$?
    echo '"cvs co PLASMA" in '"`pwd`"' exited '"$status"
    if test "$status" != 0
    then
      mkdir PLASMA/cvs.co.failed
      (echo "$info"; echo ''; echo "'cvs co PLASMA' failed; aborting autobuild"; tail cvs.co.PLASMA) | \
          Mail -s 'PLASMA Autobuild cvs checkout on '"`hostname`"' in '"`pwd`"' failed' "$email"
      mkdir working/failed
      exit "$status"
    fi

    cd PLASMA

    cmd='jam -sVARIANTS='"$var"' -sLIBRARIES='"$libmethod"

    $cmd > jam.build.$var.$libmethod 2>&1
    status=$?
    echo "$cmd"' in '"`pwd`"' exited '"$status"
    if test $status -ne 0
    then
      (echo "$info"; echo ''; echo "$cmd"' in '"`pwd`"' exited '"$status"; more jam.*.$var < /dev/null) | \
          Mail -s 'PLASMA Autobuild '"$cmd"' (compile) on '"`hostname`"' failed' "$email"
      mkdir working/failed
      exit $status
    fi

    for target in tests run-nddl-tests run-nddl-planner-tests
    do
      $cmd $target >> jam.tests.$var.$libmethod 2>&1
      status=$?
      echo "$cmd"' in '"`pwd`"' exited '"$status"
      if test $status -ne 0
      then
        (echo "$info"; echo ''; echo "$cmd"' in '"`pwd`"' exited '"$status"; more jam.*.$var < /dev/null) | \
          Mail -s 'PLASMA Autobuild '"$cmd"' on '"`hostname`"' failed' "$email"
        mkdir working/failed
        exit $status
      fi
    done

    $cmd clean > jam.clean.$var.$libmethod 2>&1
    status=$?
    echo "$cmd"' in '"`pwd`"' exited '"$status"
    if test $status -ne 0
    then
      (echo "$info"; echo ''; echo "$cmd"' in '"`pwd`"' exited '"$status"; more jam.*.$var < /dev/null) | \
          Mail -s 'PLASMA Autobuild '"$cmd"' on '"`hostname`"' failed' "$email"
      mkdir working/failed
      exit $status
    else
      (echo "$info"; echo ''; echo 'PLASMA autobuild of variant '"$var"' with library method '"$libmethod"' in '"`pwd`"' passed.';
          more jam.*.$var.$libmethod < /dev/null) | \
        Mail -s 'PLASMA Autobuild '"$var"' '"$libmethod"' on '"`hostname`"' passed' "$email"
    fi

    # Save the jam output files.
    mv -f jam.* ..

    cd ..

    # Remove everything so that each variant is tested completely independently.
    rm -rf PLASMA

  done
done

(echo "$info";
    echo '';
    echo "All builds, tests, and cleans passed for each variant (of $variants) and";
    echo "  each method of building the libraries (of $libmethods).") | \
  Mail -s 'PLASMA Autobuild on '"`hostname`"' passed.' "$email"

date > lastCompleted

exit 0
