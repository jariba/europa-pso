#!/bin/sh
# $Id: autobuild,v 1.30 2003-01-23 17:53:16 wedgingt Exp $
#
# Automatically build some variants of the Europa planner system

# Address to mail exit status messages to
email=checkins@postdoc.arc.nasa.gov

# Subdirectories to build in
subdirs='cvs optFast profOptFast shareOptFast debug noErr shareOptNoErr'

# CVS info
CVS_RSH=ssh
export CVS_RSH
CVSROOT='copernicus.arc.nasa.gov:/home/cvs/ISG-Repository'
export CVSROOT

# Don't try to use X11 (mostly to prevent Purify from doing so)
DISPLAY=
export DISPLAY

# Make sure that libstdc++.so is in this
LD_LIBRARY_PATH='/usr/apps/WS6.0/SUNWspro/lib:/usr/lib:/usr/dt/lib:/usr/openwin/lib:/usr/local/lib'
export LD_LIBRARY_PATH

# Apply limits; some compiles run out of swap space.
ulimit -c 300000
ulimit -d 2000000
ulimit -s 2000000
ulimit -v 2000000

# Print the limits so it is obvious what they are when something goes
# wrong.
ulimit -a

# Sometimes, this is run via cron, which does not use the usual $PATH
PATH=/usr/local/bin:/usr/local/teTeX/bin:"$PATH"
export PATH

set -x

startdir="`dirname $0`"
startdir="`cd $startdir; pwd`"

echo cd "$startdir"
cd "$startdir"

# Don't run this script more than once in the same directory.
mkdir working || exit 1

trap 'rmdir $startdir/working' 0

# Primary compilation loop
for dir in $subdirs
do

    cd "$startdir"
    if test -d "$dir"/NewPlan
    then
        echo "$0"': '"$dir"'/NewPlan already exists; exiting'
        exit 1
    fi

    if test ! -d "$dir"
    then
        mkdir "$dir"
        test $? = 0 || exit $?
    fi

    cd "$dir"

    cvs co NewPlan > cvs.co.NewPlan 2>&1
    status=$?
    echo '"cvs co NewPlan" in '"`pwd`"' exited '"$status"

    cd NewPlan

    mkdir working || continue

    if test "$status" != 0
    then
        mkdir working/cvs.co.failed
        exit "$status"
    fi

    if test -f ../make.options
    then
        # Add to commonMakeOptions.imake
        head -2 commonMakeOptions.imake > cMO.new
        cat ../make.options >> cMO.new
        echo '' >> cMO.new
        tail +3 commonMakeOptions.imake >> cMO.new
        mv -f cMO.new commonMakeOptions.imake
    fi

    test -d "$startdir"/working || exit 2

    make $makeopt tests >> make.tests 2>&1
    status=$?
    echo '"make tests" in '"`pwd`"' exited '"$status"

    if test $status = 0
    then
        (uname -a; echo ''; cat ../make.options) | \
            Mail -s 'Autobuild on '"`hostname`"' in '"`pwd`"' succeeded' "$email"

        # If appropriate, look for and save the profiling data
        if egrep PROFILE ../make.options > /dev/null 2>&1
        then
            find "$HOME"/europa.profiles -type d -mtime +7 -ls > .autobuild.profFind
            if test -s .autobuild.profFind
            then
                SupportFiles/gather.gprofs
		cvs tag -F Europa-autobuild-profiled
            fi
            rm -rf .autobuild.profFind
        fi
    else
        ( cat ../make.options; echo ''; tail -40 make.tests) | \
            Mail -s 'Autobuild in '"`pwd`"' failed; exited '"$status" "$email"
        mkdir working/failed
    fi

    # Save the make output
    mv make.tests ..

    # Would continue with the next one after a failure,
    #   but the disk space is not available.
    rmdir working || exit 1

    # Now, wipe out all that hard work
    cd "$startdir"/"$dir"
    rm -rf NewPlan

done
exit 0
