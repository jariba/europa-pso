
/*;;; Problem statistics
;;; Number of targets: 5 
;;;   Utilities: 217 201 191 98 95 
;;;   Sum utility: 802 
;;; Number of paths: 34 
;;;   Max Consumption: 6299.68 */

#include "k9.model.backtrack.moderate.nddl"
#include "NddlWorld.nddl"

NddlWorld world = new NddlWorld(0,500,5000);

Rover rover = new Rover(0,500,1000.);

//Locations
Location D14 = new Location();
Location D13 = new Location();
Location C1 = new Location();
Location L4 = new Location();
Location L3 = new Location();
Location L2 = new Location();
Location L1 = new Location();
Location L0 = new Location();
Location start = new Location();

Target L0_target = new Target(); 
CHAMP_Accessable ch_L0_target = new CHAMP_Accessable(L0, L0_target);
OppSci_Accessable op_L0_target = new OppSci_Accessable(L0, L0_target);
Target L1_target = new Target(); 
CHAMP_Accessable ch_L1_target = new CHAMP_Accessable(L1, L1_target);
OppSci_Accessable op_L1_target = new OppSci_Accessable(L1, L1_target);
Target L2_target = new Target(); 
CHAMP_Accessable ch_L2_target = new CHAMP_Accessable(L2, L2_target);
OppSci_Accessable op_L2_target = new OppSci_Accessable(L2, L2_target);
Target L3_target = new Target(); 
CHAMP_Accessable ch_L3_target = new CHAMP_Accessable(L3, L3_target);
OppSci_Accessable op_L3_target = new OppSci_Accessable(L3, L3_target);
Target L4_target = new Target(); 
CHAMP_Accessable ch_L4_target = new CHAMP_Accessable(L4, L4_target);
OppSci_Accessable op_L4_target = new OppSci_Accessable(L4, L4_target);

//Paths
Path L4D14 = new Path(L4, D14);
Path D14L4 = new Path(D14, L4);
Path L2D13 = new Path(L2, D13);
Path D13L2 = new Path(D13, L2);
Path C1D14 = new Path(C1, D14);
Path D14C1 = new Path(D14, C1);
Path L3D14 = new Path(L3, D14);
Path D14L3 = new Path(D14, L3);
Path D14L1 = new Path(D14, L1);
Path L1D14 = new Path(L1, D14);
Path C1D13 = new Path(C1, D13);
Path D13C1 = new Path(D13, C1);
Path L4D13 = new Path(L4, D13);
Path D13L4 = new Path(D13, L4);
Path D13L0 = new Path(D13, L0);
Path L0D13 = new Path(L0, D13);
Path L4C1 = new Path(L4, C1);
Path C1L3 = new Path(C1, L3);
Path L3C1 = new Path(L3, C1);
Path C1L4 = new Path(C1, L4);
Path C1L2 = new Path(C1, L2);
Path L2C1 = new Path(L2, C1);
Path L4L1 = new Path(L4, L1);
Path L1L4 = new Path(L1, L4);
Path L4start = new Path(L4, start);
Path startL4 = new Path(start, L4);
Path L3L2 = new Path(L3, L2);
Path L2L3 = new Path(L2, L3);
Path L2L0 = new Path(L2, L0);
Path L0L2 = new Path(L0, L2);
Path L1start = new Path(L1, start);
Path startL1 = new Path(start, L1);
Path L0start = new Path(L0, start);
Path startL0 = new Path(start, L0);

any(Position.At a);
leq(a.end, world.m_horizonEnd);
eq(a.location, start);
eq(a.start, 0);

hasAncestor(a.object, rover);

any(CHAMP.ipgetstatus ipg);
leq(world.m_horizonStart, ipg.start);
leq(ipg.end, world.m_horizonEnd);

eq(ipg.target, L4_target);

//  leq(a.end, ipg.start);

a before ipg;

any(Tracker.TrackingOff toff);
leq(toff.end, world.m_horizonEnd);
eq(toff.start, 0);
hasAncestor(toff.object, rover);

any(OpportunisticScience.OppSciIdle oidle);
leq(oidle.end, world.m_horizonEnd);
eq(oidle.start, 0);
hasAncestor(oidle.object, rover);

any(CHAMP.IPIdle cidle);
leq(cidle.end, world.m_horizonEnd);
eq(cidle.start, 0);
hasAncestor(cidle.object, rover);

//target tracking initialization
any(Target.NotTracked nt_L0_target);
leq(nt_L0_target.end, world.m_horizonEnd);
eq(nt_L0_target.target, L0_target);
eq(nt_L0_target.start, 0);

any(Target.NotTracked nt_L1_target);
leq(nt_L1_target.end, world.m_horizonEnd);
eq(nt_L1_target.target, L1_target);
eq(nt_L1_target.start, 0);

any(Target.NotTracked nt_L2_target);
leq(nt_L2_target.end, world.m_horizonEnd);
eq(nt_L2_target.target, L2_target);
eq(nt_L2_target.start, 0);

any(Target.NotTracked nt_L3_target);
leq(nt_L3_target.end, world.m_horizonEnd);
eq(nt_L3_target.target, L3_target);
eq(nt_L3_target.start, 0);

any(Target.NotTracked nt_L4_target);
leq(nt_L4_target.end, world.m_horizonEnd);
eq(nt_L4_target.target, L4_target);
eq(nt_L4_target.start, 0);

//EOF
