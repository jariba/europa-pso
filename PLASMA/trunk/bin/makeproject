#!/usr/bin/python
import re
import sys
import os
import stat

#
# Author: Matthew E. Boyce
# Purpose: To copy the directory tree of templatized project files
#          which are used to start a new PLASMA project.
# Note: I'm new to python, and so this script could probably
#       use a rewrite, but it's functional for now.

projectName = sys.argv[1]

projectSource = ".makeproject"
configDir = os.path.join("..", "config")
projectDest = os.path.join("..", "..", projectName)

# If PLASMA_HOME defined, allow script to be run from anywhere:
if os.environ.has_key("PLASMA_HOME"):
  plasmaHome = os.environ["PLASMA_HOME"]
  projectSource = os.path.join(plasmaHome, "bin", ".makeproject")
  configDir = os.path.join(plasmaHome, "config")
  projectDest = os.path.join(plasmaHome, "..", projectName)
elif os.environ.has_key("EUROPA_HOME"):
  europaHome = os.environ["EUROPA_HOME"]
  projectSource = os.path.join(europaHome, "bin", ".makeproject")
  configDir = os.path.join(europaHome, "config")
  projectDest = os.path.join(europaHome, "..", projectName)

if len(sys.argv) > 2:
  projectDest = os.path.join(sys.argv[2], projectName)


if os.path.exists(projectDest):
  print "Error: " + projectDest + " already exists!"
  sys.exit(1)

def detemplate (string, isFilename):
  toret = string
  if isFilename:
    toret = re.sub("Template", projectName, toret)
    toret = re.sub("TEMPLATE", projectName.upper(), toret)
    toret = re.sub("template", projectName.lower(), toret)
  else:
    toret = re.sub("%Project%", projectName, toret)
    toret = re.sub("%PROJECT%", projectName.upper(), toret)
    toret = re.sub("%project%", projectName.lower(), toret)
    if os.environ.has_key("PLASMA_HOME"):
      toret = re.sub("%PLASMA_HOME%", os.environ["PLASMA_HOME"], toret)
    else:
      toret = re.sub("%PLASMA_HOME%", os.path.join("..", "PLASMA"), toret)
  return toret

def copytemplate (source, dest, isDir):
  if isDir:
    os.makedirs(dest, 0755)
  else:
    destfile = open(dest, "w")
    for line in open(source, "r").readlines():
      destfile.write(detemplate(line, False))

def copytree (sourcedir, destdir):
  ignore = ['.svn']
  names = os.listdir(sourcedir)
  for name in names:
    if (name in ignore):
        continue
    source = os.path.join(sourcedir, name)
    dest = os.path.join(destdir, detemplate(name, True))
    try:
      st = os.lstat(source)
    except os.error:
      continue
    if stat.S_ISDIR(st.st_mode):
      copytemplate(source, dest, True)
      copytree (source, dest)
    else:
      copytemplate(source, dest, False)

os.makedirs(projectDest, 0755)
copytree(projectSource, projectDest)
copytree(configDir, projectDest)
