set(PLASMA_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/cmake")
set(GCC_OPTIMIZATION_FLAGS "-O3")
set(GCC_DEBUG_FLAGS "-ggdb3")
set(CMAKE_LIBRARY_PATH "/opt/lib:/opt/local/lib:${CMAKE_LIBRARY_PATH}")
if(OPTIMIZE)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GCC_OPTIMIZATION_FLAGS}")
  set(EUROPA_SUFFIX "_o")
else()
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GCC_DEBUG_FLAGS}")
  set(EUROPA_SUFFIX "_g")
endif(OPTIMIZE)

if(SIXTYFOUR)
  message(STATUS "Configuring for 64-bit build")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -m64")
  set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} -m64")
  add_definitions(-DEUROPA_64_BIT_PLATFORM)
else()
  message(STATUS "Configuring for 32-bit build")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")
  set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -m32")
  set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} -m32")
endif(SIXTYFOUR)

add_subdirectory(TinyXml)
add_subdirectory(Utils)
add_subdirectory(ConstraintEngine)
add_subdirectory(PlanDatabase)
add_subdirectory(RulesEngine)
add_subdirectory(TemporalNetwork)
add_subdirectory(NDDL)
add_subdirectory(Solvers)
add_subdirectory(Resource)
add_subdirectory(ANML)
add_subdirectory(System)