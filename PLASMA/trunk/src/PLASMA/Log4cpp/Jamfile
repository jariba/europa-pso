SubDir PLASMA Log4cpp ;

ModuleExternal Log4cpp ;

versionDir = log4cpp-1.0 ;
log4cpp.baseDir = $(PLASMA_HOME)/src/PLASMA/Log4cpp ;
versionPath = $(log4cpp.baseDir)/$(versionDir) ;
buildPath = $(PLASMA_HOME)/build/lib ;

libraryMakeFile = $(versionPath)/Makefile ;
librarySharedFile = liblog4cpp.so.4 ;
libraryBuildFile = $(versionPath)/src/.libs/$(librarySharedFile) ;
librarySharedDebugFile = libLog4cpp_g.so ;
librarySharedOptimizedFile = libLog4cpp_o.so ;
libraryStaticDebugFile = libLog4cpp_g.a ;
libraryStaticOptimizedFile = libLog4cpp_o.a ;

rule setup.log4cpp
{
  Configure.log4cpp $(1) ;
}

rule build.log4cpp
{
  Make.log4cpp $(1) ;
}

rule install.shared.log4cpp
{
  Copy.shared.lib $(1) ;
##  Depends all : $(libraryBuildFile) ;
}

rule install.static.log4cpp
{
  Copy.static.lib $(1) ;
##  Depends all : $(libraryBuildFile) ;
}

RmDir clean : log4cpp-1.0 ;

Depends $(librarySharedOptimizedFile) : $(libraryMakeFile) $(libraryBuildFile) ;
Depends $(librarySharedDebugFile) : $(libraryMakeFile) $(libraryBuildFile) ;
Depends $(libraryStaticOptimizedFile) : $(libraryMakeFile) $(libraryBuildFile) ;
Depends $(libraryStaticDebugFile) : $(libraryMakeFile) $(libraryBuildFile) ;
Depends all : 
	$(librarySharedDebugFile) 
	$(librarySharedOptimizedFile)
	$(libraryStaticDebugFile) 
	$(libraryStaticOptimizedFile) 
	;

actions Configure.log4cpp
{
  cd $(log4cpp.baseDir)
  echo -n "Unpacking $(versionDir).tar.bz2 in "
  pwd
  tar jxf $(versionDir).tar.bz2
  echo Running Log4cpp configure script ... this takes about 1 minute
  echo "  For details, see $(versionPath)/configure.log"
  cd $(versionPath);  ./configure > configure.log
}

actions Make.log4cpp
{
  echo Building Log4cpp  ... this can take a while on the first build
  echo "  running make in $(versionPath)/src"
  echo "  For details, see $(versionPath)/src/make.log  -- or tail -f that file"
  cd $(versionPath)/src; make > make.log
  cd $(PLASMA_HOME)/build/lib/
  cp  $(libraryBuildFile) .
}

actions Copy.shared.lib
{
  cd $(PLASMA_HOME)/build/lib/
  if [ ! -e $(1) ] ; then 
    echo "  Updated $(1)"
		ln -sf $(librarySharedFile) $(1)
  fi
}

actions Copy.static.lib
{
  cd $(PLASMA_HOME)/build/lib/
  if [ ! -e $(1) ] ; then 
    echo "  Updated $(1)"
		ln -sf $(libraryStaticFile) $(1)
  fi
}

setup.log4cpp $(libraryMakeFile) ;
build.log4cpp $(libraryBuildFile) ;
install.shared.log4cpp $(librarySharedDebugFile) ;
install.shared.log4cpp $(librarySharedOptimizedFile) ;
install.static.log4cpp $(libraryStaticDebugFile) ;
install.static.log4cpp $(libraryStaticOptimizedFile) ;
