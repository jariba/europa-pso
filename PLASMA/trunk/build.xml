<?xml version="1.0" encoding="UTF-8"?>
<project name="PLASMA" default="default" basedir=".">

  <description>PLASMA</description>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="ext/ant/lib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <target name="init">
    <exec executable="uname" outputproperty="uname.o">
      <arg value="-o"/>
    </exec>

    <!-- load overrides -->
    <property file="${user.home}/.ant.plasma.properties"/>

    <if>
      <or>
        <equals arg1="${uname.o}" arg2="Linux"/>
        <equals arg1="${uname.o}" arg2="GNU/Linux"/>
      </or>
      <then>
      </then>
      <!-- Mac OS X -->
      <elseif>
        <equals arg1="${uname.o}" arg2="Darwin"/>
        <then>
          <property name="env.LD_LIBRARY_PATH.name" value="DYLD_LIBRARY_PATH"/>
        </then>
      </elseif>

      <!-- CYGWIN -->
      <elseif>
        <equals arg1="${uname.o}" arg2="Cygwin"/>
        <then>
          <echo message="Running as a Cygwin build."/>
          <exec executable="cygpath" outputproperty="local.env.PLASMA_HOME">
            <arg value="--unix"/>
            <!--<arg value="-absolute"/>-->
            <arg value="${basedir}"/>
          </exec>
          <property name="jam.libraries" value="STATIC"/>
          <property name="jam.misc" value="-sOS=CYGWIN -sNOCYGWIN=TRUE"/>
        </then>
      </elseif>
    </if>

    <property name="env.LD_LIBRARY_PATH.name" value="LD_LIBRARY_PATH"/>
    <property name="local.env.PLASMA_HOME" value="${basedir}"/>
    <property name="dir.plasma" value="${basedir}"/>
    <property name="dir.src" value="src/PLASMA"/>
    <condition property="dir.planworks" value="{env.PLANWORKS_HOME}">
      <isset property="${env.PLANWORKS_HOME}"/>
    </condition>
    <property name="dir.planworks" value="${basedir}/../PlanWorks"/>
    <available property="planworks.present" file="${dir.planworks}"/>
    <property name="dir.build" value="build"/>
    <property name="dir.dist" value="dist"/>
    <property name="dir.dist.base" location="${dir.dist}/europa"/>
    <property name="file.europa_dist" value="europa.zip"/>
    <property name="jam.libraries" value="SHARED"/>
    <property name="jam.variant" value="DEV"/>
    <property name="jam.misc" value=""/>
    <property name="jam.opts" value="${jam.misc} -sVARIANTS=${jam.variant} -sLIBRARIES=${jam.libraries}"/>
  </target>

  <target name="clean" depends="init">
    <delete dir="${dir.dist}"/>
    <exec executable="jam" dir="${dir.src}" failonerror="true">
      <arg line="clean-all"/>
      <env key="PLASMA_HOME" value="${local.env.PLASMA_HOME}"/>
    </exec>
    <delete dir="${dir.build}"/>
  </target>

  <target name="build" depends="init">
    <echo message="jam ${jam.opts}"/>
    <exec executable="jam" dir="${dir.src}" failonerror="true">
      <arg line="${jam.opts} build"/>
      <env key="PLASMA_HOME" value="${local.env.PLASMA_HOME}"/>
      <env key="${env.LD_LIBRARY_PATH.name}" value="${local.env.PLASMA_HOME}/build/lib"/>
    </exec>
  </target>

  <target name="test" depends="init">
    <exec executable="jam" dir="${dir.src}" failonerror="true">
      <arg line="${jam.opts} run-all-tests"/>
      <env key="PLASMA_HOME" value="${local.env.PLASMA_HOME}"/>
      <env key="${env.LD_LIBRARY_PATH.name}" value="${local.env.PLASMA_HOME}/build/lib"/>
    </exec>
  </target>

  <target name="default" depends="init">
    <antcall target="build"/>
    <antcall target="build">
      <param name="jam.opts" value="${jam.misc} -sVARIANTS=OPTIMIZED -sLIBRARIES=${jam.libraries}"/>
    </antcall>
    <if>
      <isset property="planworks.present"/>
      <then>
        <ant dir="${dir.planworks}" target="createJNI"/>
        <ant dir="${dir.planworks}" target="compile"/>
      </then>
    </if>
    <antcall target="dist"/>
  </target>

  <!-- This target assumes that PLASMA and PlanWorks have already been built so that all the products are in place -->
  <target name="dist" depends="init" 
          description="Creates the binary distribution and packages it up into ${dir.dist}/${file.plasma_dist}">
   <!-- Create the distribution directory  -->
    <mkdir dir="${dir.dist}"/>
    <mkdir dir="${dir.dist.base}/bin"/>

    <copy todir="${dir.dist.base}/bin">
      <!-- TODO: copy script to run PSDesktop -->
      <fileset dir="${dir.plasma}/bin"/>
    </copy>
    <copy todir="${dir.dist.base}/lib">
      <fileset dir="${dir.plasma}/build/lib"/>
    </copy>

    <copy todir="${dir.dist.base}/lib/PSUI">
      <fileset dir="${dir.src}/System/component/PSUI/lib"/>
    </copy>

    <copy todir="${dir.dist.base}/include" flatten="true" includeEmptyDirs="false">
      <fileset file="${dir.src}">
        <include name="**/PS*.hh"/>
        <exclude name="**/PS*Impl.hh"/>
      </fileset>
      <fileset dir="${dir.src}/NDDL/base">
        <include name="*.nddl"/>
      </fileset>
      <fileset dir="${dir.src}/Resource/component/NDDL">
        <include name="*.nddl"/>
      </fileset>
    </copy>
    <copy todir="${dir.dist.base}/include/jam" flatten="true" includeEmptyDirs="false">
      <fileset file="${dir.src}">
        <include name="**/*Rules"/>
      </fileset>
    </copy>
    <copy todir="${dir.dist.base}/include/PLASMA" flatten="true">
      <fileset dir="${dir.src}">
        <include name="**/*.hh"/>
        <include name="**/*.h"/>
        <exclude name="**/test/**"/>
      </fileset>
    </copy>

    <copy todir="${dir.dist.base}/config">
      <fileset dir="${dir.plasma}/config"/>
    </copy>

    <!-- if PlanWorks is present, copy it into the distribution -->
    <if>
      <isset property="planworks.present"/>
      <then>
        <copy todir="${dir.dist.base}/bin">
          <fileset file="${dir.planworks}/bin/PlanWorks.sh"/>
        </copy>

        <copy todir="${dir.dist.base}/lib">
          <fileset dir="${dir.planworks}/build/lib"/>
        </copy>

        <copy todir="${dir.dist.base}/config">
          <fileset dir="${dir.planworks}/config"/>
        </copy>

        <copy todir="${dir.dist.base}/res">
          <fileset dir="${dir.planworks}/res"/>
        </copy>
      </then>
    </if>

    <if>
      <equals arg1="${uname.o}" arg2="Cygwin"/>
      <then>
        <echo message="Building System dlls for Windows."/>
        <exec executable="g++" dir="${dir.dist.base}/lib">
          <arg line="-mno-cygwin -shared -Wl,-v -Wl,--add-stdcall-alias -Wl,--whole-archive"/>
          <arg line="-oSystem_g.dll"/>
          <arg line="libSystem_g.a libSolvers_g.a libResource_g.a libANML_g.a libNDDL_g.a"/>
          <arg line="libRulesEngine_g.a libTemporalNetwork_g.a libPlanDatabase_g.a"/>
          <arg line="libConstraintEngine_g.a libUtils_g.a libTinyXml_g.a libAntlr_g.a"/>
          <arg line="-Wl,--no-whole-archive"/>
        </exec>
        <exec executable="g++" dir="${dir.dist.base}/lib">
          <arg line="-mno-cygwin -shared -Wl,-v -Wl,--add-stdcall-alias -Wl,--whole-archive"/>
          <arg line="-oSystem_o.dll"/>
          <arg line="libSystem_o.a libSolvers_o.a libResource_o.a libANML_o.a libNDDL_o.a"/>
          <arg line="libRulesEngine_o.a libTemporalNetwork_o.a libPlanDatabase_o.a"/>
          <arg line="libConstraintEngine_o.a libUtils_o.a libTinyXml_o.a libAntlr_o.a"/>
          <arg line="-Wl,--no-whole-archive"/>
        </exec>
      </then>
    </if>

    <!-- ant doesn't preserve permissions -->
    <chmod perm="+x">
      <fileset dir="${dir.dist.base}/bin"/>
    </chmod>

    <!-- Finally, zip everything up -->
    <delete file="${dir.dist}/${file.europa_dist}"/>
    <zip destfile="${dir.dist}/${file.europa_dist}" basedir="${dir.dist.base}"/>
  </target>
</project>
