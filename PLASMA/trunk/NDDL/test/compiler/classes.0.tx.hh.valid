// classes.0.tx.xml

#include "Db.hh"
#include "NddlUtils.hh"
/** Custom Include Files **/

namespace NDDL {

  class Location;
  typedef Id<Location> LocationId;
  typedef ObjectDomain LocationDomain;
  
  class Path;
  typedef Id<Path> PathId;
  typedef ObjectDomain PathDomain;
  
  
  // classes.0.nddl:3 Location
  class Location : public Object {
  public:
    Location(const PlanDatabaseId& planDatabase, const LabelStr& name);
    Location(const PlanDatabaseId& planDatabase, const LabelStr& type, const LabelStr& name);
    Location(const ObjectId& parent, const LabelStr& name);
    Location(const ObjectId& parent, const LabelStr& type, const LabelStr& name);
    void handleDefaults(bool autoClose = true); // default variable initialization
    
    ConstrainedVariableId name; // SchemaWriter::declareVariable
    
    // classes.0.nddl:3 Location
    virtual void constructor(const LabelStr& _name);
  };
  
  // classes.0.nddl:11 Path
  class Path : public Object {
  public:
    Path(const PlanDatabaseId& planDatabase, const LabelStr& name);
    Path(const PlanDatabaseId& planDatabase, const LabelStr& type, const LabelStr& name);
    Path(const ObjectId& parent, const LabelStr& name);
    Path(const ObjectId& parent, const LabelStr& type, const LabelStr& name);
    void handleDefaults(bool autoClose = true); // default variable initialization
    
    ConstrainedVariableId from; // SchemaWriter::declareVariable
    ConstrainedVariableId to; // SchemaWriter::declareVariable
    ConstrainedVariableId cost; // SchemaWriter::declareVariable
    
    // classes.0.nddl:11 Path
    virtual void constructor(const LocationId& _from, const LocationId& _to);
    
    // classes.0.nddl:11 Path
    virtual void constructor(const LocationId& loc);
    
    // classes.0.nddl:11 Path
    virtual void constructor(const LocationId& _from, const LocationId& _to, float _cost);
  };
} // End NDDL namespace
