<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is placed by the makeproject script in new projects -->
<project name="UBO" default="run" basedir=".">
  <description>UBO -- A EUROPA PSDesktop Project</description>

  <property environment="env"/>
  <!-- load overrides from build.properties file -->
  <property file="build.properties"/>

  <property name="europa.dir"   value="${env.EUROPA_HOME}"/>
  <property name="psui.lib.dir" value="${europa.dir}/lib/PSUI"/>

  <property name="debug"  value="true"/>
  <property name="deprecation"  value="true"/>
  <property name="dist" value="build/lib"/>    

  <path id="psui.class.path">
    <pathelement location="${europa.dir}/lib/PSUI.jar"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${class.dir}"/>
    <mkdir dir="${swig.src.dir}"/>
  </target>

  <property name="java.src.dir" value="java"/> 
  <property name="swig.src.dir" value="build/swig/UBO/"/>
  <property name="class.dir"     value="build/classes"/> 

  <!-- Create .jar to include any custom Java and swig-wrapped C++ -->
  <target name="UBO" depends="compile">
     <mkdir dir="${dist}"/>  				<!-- if necessary -->
     <jar jarfile="${dist}/UBO.jar">
       <fileset dir="${class.dir}"/>
     </jar>
     <touch file="${dist}/UBO.jar"/>
  </target>

  <target name="clean" description="delete the 'classes' directory trees" >
    <delete dir="${class.dir}"/>
  </target>

  <target name="compile" depends="init" description="compile 'src' tree into 'classes' tree" >
  <!-- Compile any swig-wrapped custom C++ code -->
   <javac srcdir="${swig.src.dir}" 
           destdir="${class.dir}" 
    	   debug="${debug}" 
    	   deprecation="${deprecation}">
	  <classpath refid="psui.class.path"/>
    </javac>
  <!-- Compile Main.java and any custom java code -->
    <javac srcdir="${java.src.dir}" 
           destdir="${class.dir}" 
    	   debug="${debug}" 
    	   deprecation="${deprecation}">
	  <classpath refid="psui.class.path"/>
    </javac>
  </target>
	
  <!-- project,project.dir,project.mode and project.bsh.script are read from build.properties -->
  <target name="run" depends="compile" description="build and run">
    <echo message="Running ${project} project"/>
    <java classname="${project}.Main" dir="${project.dir}" fork="yes" failonerror="true">
      <jvmarg value="-Xms256m"/>
      <jvmarg value="-Xmx1024m"/>
      <arg value="${project.mode}"/>
      <arg value="${project.bsh.script}"/>
      <arg value="${project.test}"/>      
      <arg value="${project.bound}"/>      
      <arg value="${project.timeout}"/>      
      <arg value="${project.solver}"/>      
      <classpath>
      <path refid="psui.class.path"/>
      <pathelement location="${class.dir}"/>
       </classpath>
    </java>
  </target>
      
  <target name="diff" depends="init" description="Requirements for diff">
    <exec executable="make" dir="${project.dir}" failonerror="true">
      <arg line="clean"/>
    </exec>
    <exec executable="make" dir="${project.dir}" failonerror="true">
      <env key="EUROPA_HOME" value="${env.EUROPA_HOME}"/>
      <env key="${env.LD_LIBRARY_PATH.name}" value="${europa.dir}/lib"/>
    </exec>
    <condition property="diff.allow">
        <available file="${project.dir}/RUN_${project}-planner_g_rt.${project}-initial-state.nddl.PlannerConfig.xml.output"/>
    </condition>
    <antcall target="run-diff"></antcall>
  </target>
  
  <target name="run-diff" if="diff.allow">
    <echo message="Running Diff example in ${project}"/>
    <exec executable="python" dir="${europa.dir}/bin"
    	output="${project.dir}/${project}.diff" failonerror="true">
      <env key="EUROPA_HOME" value="${env.EUROPA_HOME}"/>    	
      <arg line="plancompare ${project}"/>
    </exec>
  </target>  
</project>
