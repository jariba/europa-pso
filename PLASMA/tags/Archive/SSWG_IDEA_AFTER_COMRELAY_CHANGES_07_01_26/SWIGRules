if ! $(SWIGRules_INCLUDED) {
SWIGRules_INCLUDED = TRUE ;

include [ FDirName $(SUBDIR) PlatformRules ] ;

# Swig <c/c++ file> : <swig file> : <language> : <destination directory for language files> : <true if wrapping c++> ;
rule Swig {
  local cfile = $(1) ;
  local swigfile = $(2) ;
  local language = $(3) ;
  local destdir = $(4) ;
  local cpp = $(5) ;

  SEARCH on $(swigfile) = $(SUBDIR) ;
  LOCATE on $(cfile) = $(SUBDIR) ;

  local arguments = -$(language) -o [ FDirName $(SUBDIR) $(cfile:G=) ] -Wall ;

  if $(cpp) {
    arguments += "-c++" ;
  }

  local actualdestdir = $(SUBDIR) ;
  if $(destdir) {
    actualdestdir = [ FDirName $(SUBDIR) $(destdir) ] ;
    if ! ( $(destdir) in [ GLOB $(SUBDIR) ] ) {
      MkDir $(actualdestdir) ;
      Depends $(cfile) : $(actualdestdir) ;
    }
  }
  arguments += -outdir $(actualdestdir) ;

  NOCARE $(swigfile) ;
  Depends $(cfile) : $(swigfile) ;
  ARGUMENTS on $(cfile) = $(arguments) ;
  Clean clean : $(cfile) ;

}

actions Swig {
  swig $(ARGUMENTS) $(2)
}

#SwigSharedLibrary <swig file> : <target language> : <output destination for language-specific files> : <true if wrapping C++> : <library name> : 
#                  <module dependencies> : <build target> 
rule SwigSharedLibrary {
     local swigfile = $(1) ;
     local language = $(2) ;
     local outdir = $(3) ;
     local cpp = $(4) ;
     local libname = $(5) ;
     local deps = $(6) ;
     local target = $(7) ;

     #generate the name for the wrapping c/c++ file that gets generated
     local wrapsuffix = c ;
     if $(cpp) {
       wrapsuffix = cc ;
     }
     local wrapfile = $(swigfile:S=)_wrap.$(wrapsuffix) ;

     #generate wrapping code and language-specific files
     Swig [ FGristFiles $(wrapfile) ] : $(swigfile) : $(language) : $(outdir) : $(cpp) ;

     ModuleSharedLibrary $(libname) : $(wrapfile) : $(deps) : $(target) ;
}

rule SwigJava {
     local swigfile = $(1) ;
     local outdir = $(2) ;
     local cpp = $(3) ;
     local libname = $(4) ;
     local deps = $(5) ;
     local target = $(6) ;

     if $(JAVA_HOME) {
	if $(OS) = SOLARIS {
		SubDirC++Flags -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/solaris ;
	}
	else if $(OS) = LINUX {
		SubDirC++Flags -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux ;
	}
	else {
		SubDirC++Flags -I$(JAVA_HOME)/include ;
	}
     }
     SwigSharedLibrary $(swigfile) : java : $(outdir) : $(cpp) : $(libname) : $(deps) : $(target) ;

     local javadir ;
     if $(outdir) {
       #javadir = [ FDirName $(SUBDIR) $(outdir) ] ;
       javadir = $(outdir) ;
     }
     else {
       javadir = $(SUBDIR) ;
     }
     ApacheAnt $(target:S=.jar) : [ FGristFiles build.xml ] : $(target) -Dsrc.dir=$(javadir) ;
     Depends $(target) : $(target:S=.jar) ;
}

}
