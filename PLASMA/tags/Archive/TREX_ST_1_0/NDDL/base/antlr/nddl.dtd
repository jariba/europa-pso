<?xml version="1.0" encoding="UTF-8"?>

<!-- this document describes the output from the nddl parser when
     using the -x switch. -->

<!-- catch-all container element -->

<!ELEMENT nddl (typedef | enum | class | compat | var | invoke | goal)*>

<!-- top-level nddl elements and generic elements -->

<!ELEMENT enum (set)>
<!ATTLIST enum name NMTOKEN #REQUIRED>
<!ATTLIST enum filename CDATA #IMPLIED>
<!ATTLIST enum line CDATA #IMPLIED>
<!ATTLIST enum column CDATA #IMPLIED>

<!ELEMENT class (var | constructor | predicate | class | enum)*>
<!ATTLIST class name NMTOKEN #REQUIRED>
<!ATTLIST class extends CDATA #IMPLIED>
<!ATTLIST class filename CDATA #IMPLIED>
<!ATTLIST class line CDATA #IMPLIED>
<!ATTLIST class column CDATA #IMPLIED>

<!ELEMENT compat (group)>
<!ATTLIST compat class CDATA #REQUIRED>
<!ATTLIST compat name NMTOKEN #REQUIRED>
<!ATTLIST compat filename CDATA #IMPLIED>
<!ATTLIST compat line CDATA #IMPLIED>
<!ATTLIST compat column CDATA #IMPLIED>

<!ELEMENT var (interval | set | new | modifier)?>
<!ATTLIST var name NMTOKEN #REQUIRED>
<!ATTLIST var type CDATA #REQUIRED>
<!ATTLIST var line CDATA #IMPLIED>
<!ATTLIST var column CDATA #IMPLIED>

<!ELEMENT modifier EMPTY>
<!ATTLIST modifier name (private|protected|public) #REQUIRED>

<!ELEMENT constructor (arg*, super?, assign*)>
<!ATTLIST constructor line CDATA #IMPLIED>
<!ATTLIST constructor column CDATA #IMPLIED>

<!ELEMENT predicate ( var | subgoal | invoke | if | group)*>
<!ATTLIST predicate name NMTOKEN #REQUIRED>
<!ATTLIST predicate extends CDATA #IMPLIED>
<!ATTLIST predicate line CDATA #IMPLIED>
<!ATTLIST predicate column CDATA #IMPLIED>

<!ELEMENT group (subgoal | invoke | var | if | group)*>

<!-- <!ELEMENT arg (set | interval | symbol | id | new)*> -->
<!ELEMENT arg (value?)>
<!ATTLIST arg name NMTOKEN #REQUIRED>
<!ATTLIST arg type CDATA #REQUIRED>

<!-- constructor-only statements -->

<!ELEMENT super (set | interval | symbol | id | new | value)*>

<!ELEMENT assign (value | id | symbol | new)>
<!ATTLIST assign type CDATA #REQUIRED>
<!ATTLIST assign name CDATA #REQUIRED>
<!ATTLIST assign line CDATA #IMPLIED>
<!ATTLIST assign column CDATA #IMPLIED>

<!-- compat-only statements -->

<!ELEMENT subgoal (interval*, predicateinstance?)>
<!ATTLIST subgoal relation CDATA #REQUIRED>
<!ATTLIST subgoal target CDATA #IMPLIED>
<!ATTLIST subgoal origin CDATA #IMPLIED>
<!ATTLIST subgoal line CDATA #IMPLIED>
<!ATTLIST subgoal column CDATA #IMPLIED>

<!ELEMENT predicateinstance EMPTY>
<!ATTLIST predicateinstance type CDATA #REQUIRED>
<!ATTLIST predicateinstance name CDATA #IMPLIED>

<!ELEMENT loop (group)>
<!ATTLIST loop name CDATA #IMPLIED>
<!ATTLIST loop type CDATA #REQUIRED>
<!ATTLIST loop value CDATA #REQUIRED>
<!ATTLIST loop line CDATA #IMPLIED>
<!ATTLIST loop column CDATA #IMPLIED>

<!ELEMENT if ((equals | not | inequals | set | interval | symbol | id),
              group, group?)>

<!ELEMENT invoke (set | interval | symbol | id | new | value)*>
<!ATTLIST invoke name CDATA #REQUIRED>
<!ATTLIST invoke identifier CDATA #IMPLIED>
<!ATTLIST invoke line CDATA #IMPLIED>
<!ATTLIST invoke column CDATA #IMPLIED>

<!-- composite values -->

<!ELEMENT set (symbol | value)*>

<!ELEMENT interval EMPTY>
<!ATTLIST interval min CDATA #REQUIRED>
<!ATTLIST interval max CDATA #REQUIRED>
<!ATTLIST interval type (float|int) #REQUIRED>

<!ELEMENT new (set | interval | symbol | id | value)*>
<!ATTLIST new type CDATA #REQUIRED>

<!-- simple values, new style -->

<!ELEMENT value EMPTY>
<!ATTLIST value type CDATA #REQUIRED>
<!ATTLIST value name CDATA #REQUIRED>

<!-- simple values, old style -->

<!ELEMENT symbol EMPTY>
<!ATTLIST symbol value NMTOKEN #REQUIRED>
<!ATTLIST symbol type NMTOKEN #REQUIRED>

<!ELEMENT goal (predicateinstance)>
<!ATTLIST goal mandatory NMTOKEN #IMPLIED>
<!ATTLIST goal line CDATA #IMPLIED>
<!ATTLIST goal column CDATA #IMPLIED>

<!ELEMENT id EMPTY>
<!ATTLIST id name CDATA #REQUIRED>
<!ATTLIST id type CDATA #REQUIRED>
<!ATTLIST id line CDATA #IMPLIED>
<!ATTLIST id column CDATA #IMPLIED>

<!-- logical relations -->

<!ELEMENT equals ((set | interval | symbol | id | value),
                  (set | interval | symbol | id | value))>
<!ELEMENT nequals ((set | interval | symbol | id | value),
                   (set | interval | symbol | id | value))>
