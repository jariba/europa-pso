#include "Crew1-model.nddl"

// Create a planner configuration instance in PLASMA.
// Horizon Start, Horizon End, MaxPlannerSteps, MaxPlannerDepth
PlannerConfig plannerConfiguration = new PlannerConfig(0, 5760, 1500, +inf);

TDRS tdrs = new TDRS();
Power power = new Power();

ExerciseEquipment exerciseEquip = new ExerciseEquipment();

PRACapacity praCapacity = new PRACapacity();

Crew crew1 = new Crew();
Crew crew2 = new Crew();
Crew crew3 = new Crew();

CrewPlanner p1 = new CrewPlanner(crew1);
CrewPlanner p2 = new CrewPlanner(crew2);
CrewPlanner p3 = new CrewPlanner(crew3);

StringData cpa1Desc  = new StringData("ACT-01: Kardio-ODNT");
StringData cpa2Desc  = new StringData("ACT-02: Cardiolog-2");
StringData cpa3Desc  = new StringData("ACT-03: Renal Stone Risk");
StringData cpa4Desc  = new StringData("ACT-04: MYOCYTE");
StringData cpa5Desc  = new StringData("ACT-05: AMPHIBODY");
StringData cpa6Desc  = new StringData("ACT-06: STROMA");
StringData cpa7Desc  = new StringData("ACT-07: TUBUL");
StringData cpa8Desc  = new StringData("ACT-08: Nitric Oxide Analyzer");
StringData cpa9Desc  = new StringData("ACT-09: Public Afffairs Office - 1");
StringData cpa10Desc = new StringData("ACT-10: Public Afffairs Office - 2");
StringData cpa11Desc = new StringData("ACT-11: Public Afffairs Office - 3");


StringData power1Desc = new StringData("POWER-1: INSPACE");
StringData power2Desc = new StringData("POWER-2: PCG-STES10");
StringData power3Desc = new StringData("POWER-3: Refridgerated Centrifuge");

RPCM_RR rpcm_rr = new RPCM_RR();

// Close the the PLASMA Database - no more objects can be created.
close();

// Now place your goals here.

goal(p1.daily_routine dr1); dr1.start = 0;
goal(p2.daily_routine dr2); dr2.start = 0;
goal(p3.daily_routine dr3); dr3.start = 0;

// Change filter in the first day, this will spawn subsequent filter changes
goal(Crew.change_filter cf); leq(cf.end,2880);

// Same with medical conferences
goal(crew1.medical_conference mc1); leq(mc1.end,2880);
goal(crew2.medical_conference mc2); leq(mc2.end,2880);
goal(crew3.medical_conference mc3); leq(mc3.end,2880);

// Payload activities
goal(Crew.restraint_payload_activity cpa1);
goal(Crew.restraint_payload_activity cpa2);
goal(Crew.restraint_payload_activity cpa3);
goal(Crew.restraint_payload_activity cpa12);
goal(Crew.restraint_payload_activity cpa13);
goal(Crew.payload_activity cpa4);
goal(Crew.payload_activity cpa5);
goal(Crew.comm_payload_activity cpa6);
goal(Crew.comm_payload_activity cpa7); 
goal(Crew.comm_payload_activity cpa8);
goal(Crew.comm_payload_activity cpa9);
goal(Crew.comm_payload_activity cpa10);
goal(Crew.comm_payload_activity cpa11);

cpa1.id  =  1; cpa1.desc  = cpa1Desc;  cpa1.duration  = 60;  cpa1.priority  = 1; cpa1.dueDate = 4320; 
cpa2.id  =  2; cpa2.desc  = cpa2Desc;  cpa2.duration  = 90; cpa2.priority  = 1; cpa2.dueDate = 5760; 

cpa3.id  =  3; cpa3.desc  = cpa3Desc;  cpa3.duration  = 45; cpa3.priority  = 1; cpa3.dueDate = 2880; 
cpa12.id  =  12; cpa12.desc  = cpa3Desc;  cpa12.duration  = 45; cpa12.priority  = 1; cpa12.dueDate = 4320; 
cpa13.id  =  13; cpa13.desc  = cpa3Desc;  cpa13.duration  = 45; cpa13.priority  = 1; cpa13.dueDate = 5760; 

cpa4.id  =  4; cpa4.desc  = cpa4Desc;  cpa4.duration  = 45; cpa4.priority  = 1; cpa4.dueDate = 2880; cpa4.usesComms = 0; cpa4.isPhysicallyRestraining = 0;
cpa5.id  =  5; cpa5.desc  = cpa5Desc;  cpa5.duration  = 45; cpa5.priority  = 1; cpa5.dueDate = 1440; cpa5.usesComms = 0; cpa5.isPhysicallyRestraining = 0;
cpa6.id  =  6; cpa6.desc  = cpa6Desc;  cpa6.duration  = 75; cpa6.priority  = 1; cpa6.dueDate = 2880; 
cpa7.id  =  7; cpa7.desc  = cpa7Desc;  cpa7.duration  = 60;  cpa7.priority  = 1; cpa7.dueDate = 1440; 
cpa8.id  =  8; cpa8.desc  = cpa8Desc;  cpa8.duration  = 45; cpa8.priority  = 1; cpa8.dueDate = 4320; 
cpa9.id  =  9; cpa9.desc  = cpa9Desc;  cpa9.duration  = 75; cpa9.priority  = 1; cpa9.dueDate = 5760; 
cpa10.id = 10; cpa10.desc = cpa10Desc; cpa10.duration = 30;  cpa10.priority = 1; cpa10.dueDate = 5760; 
cpa11.id = 11; cpa11.desc = cpa11Desc; cpa11.duration = 90;  cpa11.priority = 1; cpa11.dueDate = 5760; 

// Power activities

/*
goal(Crew.power_activity pa1);
goal(Crew.power_activity pa2);
goal(Crew.power_activity pa3);

pa1.id  =  1; pa1.desc  = power1Desc;  pa1.duration  = 60;  pa1.usage = 240.0; pa1.dueDate = 4320; 
pa2.id  =  2; pa2.desc  = power2Desc;  pa2.duration  = 60;  pa2.usage = 126.0; pa2.dueDate = 4320; 
pa3.id  =  3; pa3.desc  = power3Desc;  pa3.duration  = 60;  pa3.usage = 1100.0; pa3.dueDate = 4320; 
*/

// Schedule RPCM operation to test
/*
goal(RPCM_RR.perform rpcm_act);
leq(4320,rpcm_act.start);
leq(rpcm_act.end,5760);
*/

// State TDRS communication windows
// Test by nuking most of the second day
//goal(tdrs.uses tdrs1);
//tdrs1.start = 1636; tdrs1.end = 2880; tdrs1.quantity = 4.0;

// The planner should take it from here!
