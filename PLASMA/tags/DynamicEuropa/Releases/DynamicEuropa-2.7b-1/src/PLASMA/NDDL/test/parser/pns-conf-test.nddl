enum LocLabel { here, there, someplace }

class Location
{
  predicate At { LocLabel loc; }
  predicate Going { LocLabel from, to; }
}

class Camera
{
  predicate TakePicture {}
  predicate Idle {}
}

class SlowCamera extends Camera
{
  predicate TakePicture {}
  Location loc;
  SlowCamera(Location l = new Location()) {
    loc = l;
  }
}

SlowCamera::TakePicture {
  contained_by(loc.At);
}

class Rover
{
  Location l;
  SlowCamera sc;
  Rover() {
    l = new Location();
    sc = new SlowCamera(l);
  }
}

class Tripod
{
  SlowCamera sc;
  Location l;
  Tripod() {
    sc = new SlowCamera();
    l = sc.loc;
  }
}
