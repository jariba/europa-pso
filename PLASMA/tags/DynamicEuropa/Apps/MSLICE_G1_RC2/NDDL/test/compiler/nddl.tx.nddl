#include "Plasma.nddl"

class Foo extends Timeline { // Declare a basic class with a simple predicate
 predicate pred{int arg;}
}

enum Color {Red, Yellow, Blue}; // Declare an enumeration

// Allocate objects and close the database
Foo f1 = new Foo();
Foo f2 = new Foo();
Foo f3 = new Foo();
close();

Foo allFoo; // Declare a variable. Contains all Foo instances initially
allFoo.specify(f2); // Specify it to a singleton
// TO DO: allFoo.reset();

goal(Foo.pred t0); // Allocate a goal token - initially active. Initially the object variable contains all instances of Foo
t0.object.specify(f1); // Specify to a singleton. Demonstrates access to built-in token variable
t0.start.specify([0 4]); // Specify to an interval. Demonstrates access to a built-in token variable
t0.arg.specify(4); // Specify to a singleton. Demonstrates access to an explicit token paramter variable

Color colors; // Allocate a variable which initially contains all colors.
colors.specify({Red, Blue}); // Specify to a pair of values.
Color color; // Allocate a variable which initially contains all colors.
color.specify(Red); // Specify to a sinlgeton
