enum fruits [0 5]
enum moreFruits [0 +inf]
enum happyFruits [0. +inf]
enum allFruits [-inf +inf]

class T {
  predicate Apple {
  }
  predicate Orange {
  }
  predicate Grape {
  }
  predicate Banana {
  }
  predicate FloatingApple {
  }
  predicate FloatingOrange {
  }
  predicate FloatingGrape {
  }
  predicate FloatingBanana {
  }
}

T::Apple {
  starts_before (Orange o);
  temporaldistance(this.start, [0 10], o.start);
}

T::Orange {
  contained_by (Apple a);
  temporaldistance(a.start, [0 5], this.start);
  temporaldistance(this.end, [2 3], a.end);
}

T::Grape {
  starts_before (Orange o);
  temporaldistance(this.start, [-inf 10], o);
}

T::Banana {
  contained_by (Apple a);
  temporaldistance(a.start, [-inf +inf], this.start);
  temporaldistance(this.end, [2 +inf], a.end);
}

T::FloatingApple {
  starts_before (Orange o);
  temporaldistance(this.start, [0. 10], o);
}

T::FloatingOrange {
  contained_by (Apple a);
  temporaldistance(a.start, [0 5.], this.start);
  temporaldistance(this.end, [2 3], a.end);
}

T::FloatingGrape {
  starts_before (Orange o);
  temporaldistance(this.start, [-inf 10.], o);
}

T::FloatingBanana {
  contained_by (Apple a);
  temporaldistance(a.start, [-inf +inf], this.start);
  temporaldistance(this.end, [2. +inf], a.end);
}
